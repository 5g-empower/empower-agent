dnl -*- mode: shell-script; tab-width: 2 -*-
dnl Process this file with autoconf to produce a configure script.
AC_INIT(pathvars.h.in)
AC_CONFIG_HEADER(include/click/config.h:config.h.in include/click/pathvars.h:pathvars.h.in include/click/config-bsdmodule.h:config-bsdmodule.h.in include/click/config-linuxmodule.h:config-linuxmodule.h.in include/click/config-userlevel.h:config-userlevel.h.in)

CLICK_VERSION=1.2.2a

AC_SUBST(ac_configure_args)
AC_DEFINE_UNQUOTED(CLICK_VERSION, "$CLICK_VERSION")
AC_SUBST(CLICK_VERSION)

CLICK_INIT('$(top_srcdir)')

dnl support for cross compiling
AC_CANONICAL_SYSTEM

dnl This is wrong!!
AC_CHECK_TOOL(CC, gcc)
AC_CHECK_TOOL(CXX, g++)

CLICK_PROG_CC
AC_PROG_CPP

CLICK_PROG_CXX
AC_PROG_CXXCPP

CLICK_PROG_KERNEL_CXX

AC_CHECK_TOOL(AR, ar)
AC_CHECK_TOOL(LD, ld)
AC_CHECK_TOOL(RANLIB, ranlib, :)
AC_CHECK_TOOL(STRIP, strip, :)

conf_auxdir='$(top_srcdir)'
AC_SUBST(conf_auxdir)


dnl
dnl check drivers to enable
dnl

AC_ARG_ENABLE(userlevel, [  --disable-userlevel     disable user-level driver], :, enable_userlevel=yes)
AC_ARG_ENABLE(linuxmodule, [  --disable-linuxmodule   disable Linux kernel driver], :, enable_linuxmodule=yes)
AC_ARG_ENABLE(bsdmodule, [  --enable-bsdmodule      enable FreeBSD kernel driver (EXPERIMENTAL)], :, enable_bsdmodule=no)


dnl
dnl How to build linuxmodule driver?
dnl

AC_ARG_WITH(linux, [  --with-linux[=DIR]      Linux source code is in DIR [/usr/src/linux]],
  [linuxdir=$withval; if test -z "$withval" -o "$withval" = yes; then linuxdir=/usr/src/linux; fi],
  linuxdir=NONE)

if test "x$linuxdir" = xNONE; then
  if test -d /usr/src/linux; then
    linuxdir=/usr/src/linux
  elif test "x$enable_linuxmodule" = xyes; then
    AC_MSG_WARN([
=========================================

I can't find /usr/src/linux, so I'm not compiling the linuxmodule driver.
(You may need the --with-linux=DIR option.)

=========================================])
  fi
fi

if test "x$linuxdir" = xNONE -o "x$linuxdir" = xno -o "x$enable_linuxmodule" != xyes; then
  ac_have_linux_kernel=n
  linuxdir=NONE
elif test -r $linuxdir/include/linux/skbuff.h; then
  ac_have_linux_kernel=y
else
  AC_MSG_ERROR([
=========================================

I can't find $linuxdir/include/linux/skbuff.h!
Are you sure $linuxdir contains Linux kernel source?

=========================================])
fi
AC_SUBST(linuxdir)
AC_DEFINE_UNQUOTED(LINUX_SRCDIR, "${linuxdir}")


dnl
dnl How to build bsdmodule driver?
dnl

AC_ARG_WITH(freebsd, [  --with-freebsd[=DIR]    FreeBSD source code is in DIR [/usr/include]],
  [freebsddir=$withval; if test -z "$withval" -o "$withval" = yes; then freebsddir=/usr/inclde; fi],
  freebsddir=NONE)

if test "x$freebsddir" = xNONE; then
  if test -d /usr/include; then
    freebsddir=/usr/include
  elif test "x$enable_bsdmodule" = xyes; then
    AC_MSG_WARN([
=========================================

I can't find /usr/include, so I'm not compiling the bsdmodule driver.
(You may need the --with-freebsd=DIR option.)

=========================================])
  fi
fi

if test "x$freebsddir" = xNONE -o "x$freebsddir" = xno -o "x$enable_bsdmodule" != xyes; then
  ac_have_bsd_kernel=n
  freebsddir=NONE
elif test -r $freebsddir/net/if_var.h; then
  ac_have_bsd_kernel=y
else
  AC_MSG_ERROR([
=========================================

I can't find $freebsddir/net/if_var.h!
Are you sure $freebsddir contains FreeBSD kernel source?

=========================================])
fi
AC_SUBST(freebsddir)


dnl
dnl check whether target is Linux
dnl

AC_CACHE_CHECK(whether we are compiling for Linux, ac_cv_under_linux,
  AC_TRY_COMPILE([], [#ifndef __linux__
#error "fuckers! fuckers!"
#endif
return 0;], ac_cv_under_linux=yes, ac_cv_under_linux=no))


dnl
dnl check whether tools should be built for host or build
dnl

AC_ARG_ENABLE(tools,
  [  --enable-tools=WHERE    build tools to run WHERE [mixed]],
  :, enable_tools=mixed)

if test "$enable_tools" != mixed -a "$enable_tools" != host -a "$enable_tools" != build; then
  AC_MSG_ERROR([
=========================================

Bad value for --enable-tools! Try 'host', 'build', or 'mixed'.

=========================================])
elif test "$cross_compiling" = no -o "$enable_tools" = host; then
  HOST_TOOLS=host
else
  dnl This is wrong!! Should at least check that HOST_CC and HOST_CXX work.
  AC_CHECK_PROGS(BUILD_CC, gcc)
  AC_CHECK_PROGS(BUILD_CXX, g++)
  AC_CHECK_PROGS(BUILD_AR, ar)
  AC_CHECK_PROGS(BUILD_RANLIB, ranlib, :)
  HOST_TOOLS=$enable_tools
fi
AC_SUBST(HOST_TOOLS)


dnl
dnl multithread support?
dnl

AC_ARG_ENABLE(multithread,
  [  --enable-multithread[=NUM]
                          support kernel multithreading with NUM threads max],
  :, enable_multithread=no)

if test "$enable_multithread" = yes; then
  enable_multithread=4
fi
if test "$enable_multithread" != no; then
  AC_DEFINE_UNQUOTED(NUM_CLICK_CPUS, $enable_multithread)
  AC_DEFINE_UNQUOTED(__MTCLICK__, 1)
  saveflags="$CPPFLAGS"
  CPPFLAGS="$saveflags -D__MTCLICK__"
else
  AC_DEFINE_UNQUOTED(NUM_CLICK_CPUS, 1)
fi


dnl
dnl functions
dnl

AC_REPLACE_FUNCS(strerror)
AC_CHECK_FUNCS(snprintf strtoul tcgetpgrp vsnprintf)


dnl
dnl integer types
dnl

AC_ARG_ENABLE(int64, [  --disable-int64         disable 64-bit integer support], :, enable_int64=yes)

CLICK_CHECK_ALIGNMENT
CLICK_CHECK_INTEGER_TYPES
if test "x$enable_int64" = xyes; then
    CLICK_CHECK_INT64_TYPES
fi
CLICK_CHECK_ENDIAN


dnl
dnl headers, dynamic linking
dnl

AC_CHECK_HEADERS(unistd.h termio.h)
CLICK_CHECK_DYNAMIC_LINKING


dnl
dnl sockets
dnl

SOCKET_LIBS=
dnl AC_CHECK_LIB(nsl, gethostbyname, SOCKET_LIBS="-lnsl $SOCKET_LIBS")
AC_CHECK_LIB(socket, connect, SOCKET_LIBS="-lsocket $SOCKET_LIBS")
AC_SUBST(SOCKET_LIBS)


dnl
dnl mmap
dnl

AC_LANG_C
AC_CHECK_HEADERS(sys/mman.h)
AC_FUNC_MMAP
AC_CHECK_FUNCS(madvise)
AC_LANG_CPLUSPLUS


dnl
dnl element collections
dnl

dnl ELEMENTS_ARG_ENABLE(COLLECTION, HELP-STRING, DEFAULT-VALUE)
element_groups=""
AC_SUBST(element_groups)
AC_DEFUN(ELEMENTS_ARG_ENABLE,
[AC_ARG_ENABLE($1, [  --]builtin(substr, builtin(ifelse, [$3], yes, dis, en)[able-$1              ], 0, 21)[ ]builtin(ifelse, [$3], yes, [do not ], [])[$2], ,
[enable_]patsubst([$1], -, _)=$3)dnl
if test ["x$enable_]patsubst([$1], -, _)["] = xyes; then
  element_groups="$element_groups $1"
  $4
fi])

ELEMENTS_ARG_ENABLE(standard, [include standard elements], yes)
ELEMENTS_ARG_ENABLE(ethernet, [include Ethernet elements], yes)
ELEMENTS_ARG_ENABLE(aqm, [include active queue management elements], yes)
ELEMENTS_ARG_ENABLE(ip, [include IP elements], yes)
ELEMENTS_ARG_ENABLE(icmp, [include ICMP elements], yes)
ELEMENTS_ARG_ENABLE(tcpudp, [include TCP and UDP elements], yes)
ELEMENTS_ARG_ENABLE(snmp, [include SNMP elements], no)
ELEMENTS_ARG_ENABLE(app, [include application-level elements], yes)
ELEMENTS_ARG_ENABLE(analysis, [include elements for network analysis], no)
ELEMENTS_ARG_ENABLE(ipsec, [include IP security elements], no, AC_DEFINE(HAVE_IPSEC))
ELEMENTS_ARG_ENABLE(ip6, [include IPv6 elements (EXPERIMENTAL)], no, AC_DEFINE(HAVE_IP6))
ELEMENTS_ARG_ENABLE(etherswitch, [include Ethernet switch elements (EXPERIMENTAL)], no)
ELEMENTS_ARG_ENABLE(radio, [include radio elements (EXPERIMENTAL)], no)
ELEMENTS_ARG_ENABLE(local, [include local elements], no)
ELEMENTS_ARG_ENABLE(grid, [include Grid elements (see FAQ)], no)

elements_vpath=`echo "$element_groups" | sed -e ['s/ \([^ ][^ ]*\)/:$(top_srcdir)\/elements\/\1/g']`
AC_SUBST(elements_vpath)

AC_ARG_ENABLE(greedy, [  --enable-greedy         kernel module keeps CPU forever (requires SMP;
                          provides more predictable performance)], , enable_greedy=no)
if test "x$enable_greedy" = xyes; then
    AC_DEFINE(CLICK_GREEDY)
fi

AC_ARG_ENABLE(warp9, [  --enable-warp9          reduce PollDevice functionality for speed], , enable_warp9=no)
if test "x$enable_warp9" = xyes; then
    AC_DEFINE(CLICK_WARP9)
fi


dnl
dnl objects required by element collections
dnl

EXTRA_DRIVER_OBJS=
EXTRA_TOOL_OBJS=
if test "x$enable_ip6" = xyes; then
    EXTRA_DRIVER_OBJS="ip6address.o ip6flowid.o ip6table.o $EXTRA_DRIVER_OBJS"
    EXTRA_TOOL_OBJS="ip6address.o $EXTRA_TOOL_OBJS"
fi
AC_SUBST(EXTRA_DRIVER_OBJS)
AC_SUBST(EXTRA_TOOL_OBJS)


dnl
dnl stuff in the linux kernel
dnl

if test $ac_have_linux_kernel = y; then

if test ! -f $linuxdir/System.map; then
    AC_MSG_ERROR([
=========================================

Can't find $linuxdir/System.map!

=========================================])
fi

AC_CACHE_CHECK(for Click Linux kernel extensions, ac_cv_click_kernel,
[if grep ptype_dispatch $linuxdir/System.map >/dev/null 2>&1; then
  ac_cv_click_kernel=yes
else ac_cv_click_kernel=no; fi])
if test $ac_cv_click_kernel = yes; then
    AC_DEFINE_UNQUOTED(HAVE_CLICK_KERNEL, 1)
fi

AC_CACHE_CHECK(for read_net_skbcount kernel extension, ac_cv_linux_read_net_skbcount,
[if grep read_net_skbcount $linuxdir/System.map >/dev/null 2>&1; then
  ac_cv_linux_read_net_skbcount=yes
else ac_cv_linux_read_net_skbcount=no; fi])
if test $ac_cv_linux_read_net_skbcount = yes; then
    AC_DEFINE_UNQUOTED(HAVE_LINUX_READ_NET_SKBCOUNT, 1)
fi

AC_CACHE_CHECK(for strlen kernel symbol, ac_cv_linux_strlen_exposed,
[if grep ' strlen' $linuxdir/System.map >/dev/null 2>&1; then
  ac_cv_linux_strlen_exposed=yes
else ac_cv_linux_strlen_exposed=no; fi])
if test $ac_cv_linux_strlen_exposed = yes; then
    AC_DEFINE_UNQUOTED(HAVE_LINUX_STRLEN_EXPOSED, 1)
fi

AC_CACHE_CHECK(for tulip_interrupt_hook kernel symbol, ac_cv_linux_tulip_intr_hook,
[if grep ' tulip_interrupt_hook' $linuxdir/System.map >/dev/null 2>&1; then
  ac_cv_linux_tulip_intr_hook=yes
else ac_cv_linux_tulip_intr_hook=no; fi])
if test $ac_cv_linux_tulip_intr_hook = yes; then
    AC_DEFINE_UNQUOTED(HAVE_LINUX_TULIP_INTERRUPT_HOOK, 1)
fi

AC_CACHE_CHECK(for device polling kernel extension, ac_cv_linux_poll_extension,
[if grep polling $linuxdir/include/linux/netdevice.h >/dev/null 2>&1; then
  ac_cv_linux_poll_extension=yes
else ac_cv_linux_poll_extension=no; fi])
if test $ac_cv_linux_poll_extension = yes; then
    AC_DEFINE_UNQUOTED(HAVE_LINUX_POLLING, 1)
fi

AC_CACHE_CHECK(for SMP, ac_cv_smp,
[if grep "#define CONFIG_SMP 1" $linuxdir/include/linux/autoconf.h >/dev/null 2>&1; then
  ac_cv_smp=yes
else ac_cv_smp=no; fi])
if test $ac_cv_smp = yes; then
    AC_DEFINE_UNQUOTED(__SMP__, 1)
    KERNEL_CXX="$KERNEL_CXX -D__SMP__"
fi

fi


dnl
dnl stuff in the bsd kernel
dnl

if test $ac_have_bsd_kernel = y; then

AC_CACHE_CHECK(for Click BSD kernel extensions, ac_cv_click_bsd_kernel,
[if grep Click "$freebsddir/net/if_var.h" >/dev/null 2>&1; then
  ac_cv_click_bsd_kernel=yes
else ac_cv_click_bsd_kernel=no; fi])
if test $ac_cv_click_bsd_kernel = yes; then
    AC_DEFINE_UNQUOTED(HAVE_CLICK_BSD_KERNEL, 1)
fi

AC_CACHE_CHECK(for device polling BSD kernel extension, ac_cv_bsd_poll_extension,
[if grep polling "$freebsddir/net/if_var.h" >/dev/null 2>&1; then
  ac_cv_bsd_poll_extension=yes
else ac_cv_bsd_poll_extension=no; fi])
if test $ac_cv_bsd_poll_extension = yes; then
    AC_DEFINE_UNQUOTED(HAVE_BSD_POLLING, 1)
else
    dnl
    dnl XXX lr 010928 force extensions
    dnl

    AC_DEFINE_UNQUOTED(HAVE_CLICK_BSD_KERNEL, 1)
    AC_DEFINE_UNQUOTED(HAVE_BSD_POLLING, 1)
fi

fi


dnl
dnl use Intel-specific machine instructions
dnl

AC_ARG_ENABLE(intel-cpu, [  --enable-intel-cpu      enable Intel-specific machine instructions], :, enable_intel_cpu=no)
if test $enable_intel_cpu = yes; then
    AC_DEFINE_UNQUOTED(HAVE_INTEL_CPU, 1)
fi


dnl
dnl type of scheduling
dnl

AC_ARG_ENABLE(stride, [  --disable-stride        disable stride scheduler], :, enable_stride=yes)
if test $enable_stride = yes; then
    AC_DEFINE_UNQUOTED(HAVE_STRIDE_SCHED, 1)
fi


dnl
dnl debugging malloc
dnl

AC_ARG_ENABLE(dmalloc, [  --enable-dmalloc        enable debugging malloc], :, enable_dmalloc=no)
if test $enable_dmalloc = yes; then
    AC_DEFINE_UNQUOTED(CLICK_DMALLOC, 1)
fi


dnl
dnl possible targets
dnl

POSSIBLE_TARGETS="linuxmodule userlevel bsdmodule"
AC_SUBST(POSSIBLE_TARGETS)
if test -f $srcdir/exopc/Makefile.in; then
  POSSIBLE_TARGETS="$POSSIBLE_TARGETS exopc"
fi


dnl
dnl default targets
dnl

TARGETS=
AC_SUBST(TARGETS)
TOOLDIRS="click-align click-check click-combine click-devirtualize click-fastclassifier click-flatten click-install click-mkmindriver click-undead click-xform"
TOOL_TARGETS="click-align click-check click-combine click-devirtualize click-fastclassifier click-flatten click-mkmindriver click-undead click-xform"
if test -d $srcdir/tools/click-ipopt; then
  TOOLDIRS="$TOOLDIRS click-ipopt"
  TOOL_TARGETS="$TOOLDIRS click-ipopt"
fi
AC_SUBST(TOOLDIRS)
AC_SUBST(TOOL_TARGETS)


dnl
dnl pcap library
dnl note: no longer need pcap under Linux
dnl

if test "$enable_userlevel" = yes; then
    CLICK_CHECK_LIBPCAP
    if test "$HAVE_PCAP" != yes -a "$ac_cv_under_linux" != yes; then
	AC_MSG_WARN([
=========================================

pcap.h or -lpcap not found; user-level driver can't steal packets

=========================================])
    fi
    TARGETS="$TARGETS userlevel"
fi


dnl check linuxmodule for Linux

HAVE_LINUXMODULE_TARGET=
if test $ac_have_linux_kernel = y; then

  dnl include the correct version of Linux
  SAVE_CXX="$CXX"
  CXX="$KERNEL_CXX"
  saveflags="$CPPFLAGS"
  CPPFLAGS="$saveflags -I$linuxdir/include"

  AC_CACHE_CHECK(for C++-includable kernel header files,
    ac_cv_cxx_aware_system,
    AC_LANG_CPLUSPLUS
    AC_TRY_COMPILE([#define __KERNEL__
#include <linux/signal.h>], [return 0],
	ac_cv_cxx_aware_system=yes, ac_cv_cxx_aware_system=no))

  dnl check whether -fpermissive is required
  if test $ac_cv_cxx_aware_system = yes; then

    AC_CACHE_CHECK(whether -fpermissive is required, ac_cv_f_permissive,
      AC_LANG_CPLUSPLUS
      AC_TRY_LINK([#define __KERNEL__
#define MODULE
#define _FEATURES_H
#define new xxx_new
#define this xxx_this
#define delete xxx_delete
#define class xxx_class
#define virtual xxx_virtual
#include <linux/skbuff.h>], [], 
	ac_cv_f_permissive=no, ac_cv_f_permissive=yes))

    if test $ac_cv_f_permissive = yes; then
      CXX="$KERNEL_CXX -fpermissive"
      AC_CACHE_CHECK(whether -fpermissive is allowed, ac_cv_f_permissive_ok,
	AC_LANG_CPLUSPLUS
	AC_TRY_LINK([#define __KERNEL__
#define MODULE
#define _FEATURES_H
#define new xxx_new
#define this xxx_this
#define delete xxx_delete
#define class xxx_class
#define virtual xxx_virtual
#include <linux/skbuff.h>], [], 
	ac_cv_f_permissive_ok=yes, ac_cv_f_permissive_ok=no))

      if test $ac_cv_f_permissive_ok = no; then
	ac_cv_cxx_aware_system=no
      else
	KERNEL_CXX="$KERNEL_CXX -fpermissive"
      fi
    fi
  fi

  CXX="$SAVE_CXX"
  CPPFLAGS="$saveflags"

  if test $ac_cv_cxx_aware_system = yes; then
    TARGETS="$TARGETS linuxmodule"
    TOOL_TARGETS="$TOOL_TARGETS click-install"
    HAVE_LINUXMODULE_TARGET=1
  else
    AC_MSG_WARN([
=========================================

Your header files must be patched before a C++ program
can include them. Apply the patch that came with this distribution
if you want to compile Click as a Linux module.

=========================================])
  fi
fi
AC_SUBST(HAVE_LINUXMODULE_TARGET)


dnl check bsdmodule for BSD

HAVE_BSDMODULE_TARGET=
if test $ac_have_bsd_kernel = y; then
  TARGETS="$TARGETS bsdmodule"
  HAVE_BSDMODULE_TARGET=1
fi
AC_SUBST(HAVE_BSDMODULE_TARGET)


dnl
dnl programs needed for build process
dnl

CLICK_PROG_INSTALL
CLICK_PROG_GMAKE
CLICK_PROG_AUTOCONF
CLICK_PROG_PERL5

if test -z "$GMAKE"; then
    AC_MSG_ERROR([
==============================================

I can't find GNU make. Either put "'`'"gmake' on your PATH and
rerun "'`'"./configure', or set the GMAKE environment variable to
GNU make's pathname.

==============================================])
fi


dnl
dnl Makeinfo, texi2dvi, install-info
dnl

AC_MSG_CHECKING(for working makeinfo)
MAKEINFO=${MAKEINFO-makeinfo}
if ($MAKEINFO --version) < /dev/null > conftest.out 2>&1; then
  if test `head -1 conftest.out | sed 's/.* \([[0-9]][[0-9]]*\).*/\1/'` -ge 4; then
    AC_MSG_RESULT(found)
  else
    MAKEINFO='$(conf_auxdir)/missing makeinfo'
    AC_MSG_RESULT(old)
  fi
else
  MAKEINFO='$(conf_auxdir)/missing makeinfo'
  AC_MSG_RESULT(missing)
fi

AC_MSG_CHECKING(for working texi2dvi)
TEXI2DVI=${TEXI2DVI-texi2dvi}
if ($TEXI2DVI --version) < /dev/null > conftest.out 2>&1; then
  dnl Search for a good version of texi2dvi
  if test `head -1 conftest.out | sed 's/.* \([[0-9]][[0-9]]*\).*/\1/'` -ge 4; then
    AC_MSG_RESULT(found)
  else
    TEXI2DVI='$(conf_auxdir)/missing texi2dvi'
    AC_MSG_RESULT(old)
  fi
else
  TEXI2DVI='$(conf_auxdir)/missing texi2dvi'
  AC_MSG_RESULT(missing)
fi

dnl Assume any version of install-info is OK
if test ${INSTALL_INFO-xxx} = xxx; then
  AC_PATH_PROG(INSTALL_INFO, install-info, '$(conf_auxdir)/missing install-info',
	$PATH:/sbin:/usr/sbin:/usr/local/sbin)
fi
AC_MSG_CHECKING(for working install-info)
if ($INSTALL_INFO --version) < /dev/null > conftest.out 2>&1; then
  AC_MSG_RESULT(found)
else
  INSTALL_INFO='$(conf_auxdir)/missing install-info'
  AC_MSG_RESULT(missing)
fi


AC_SUBST(MAKEINFO)
AC_SUBST(TEXI2DVI)
AC_SUBST(INSTALL_INFO)


dnl
dnl set path variables
dnl

shell_expand () {
  val=`eval echo '$'"$1"`
  while echo "x$val" | fgrep '$' >/dev/null 2>&1; do val=`eval echo "$val"`; done
  eval "$1='$val'"
}

dnl Preset $prefix and $exec_prefix.
test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

dnl Expand 'infodir' to check for Red Hat
if test x$infodir = 'x${prefix}/info'; then
  test ! -d ${prefix}/info && test -d ${prefix}/share/info && infodir='${prefix}/share/info'
fi

shell_expand bindir
shell_expand libdir
shell_expand datadir
shell_expand infodir

AC_DEFINE_UNQUOTED(CLICK_BINDIR, "$bindir")
AC_DEFINE_UNQUOTED(CLICK_LIBDIR, "$libdir")
AC_DEFINE_UNQUOTED(CLICK_SHAREDIR, "$datadir/click")
AC_DEFINE_UNQUOTED(CLICK_INFODIR, "$infodir")

dnl
dnl Provisions
dnl

dnl start out with CPU
provisions="$target_cpu"
case "$target_cpu" in
  i386) :;;
  i486|i586) provisions="$provisions i386";;
  i686|i786) provisions="$provisions i386 i586";;
esac

dnl add Linux provisions
if test $ac_have_linux_kernel = y; then
  ac_linux_version_code=`grep LINUX_VERSION_CODE $linuxdir/include/linux/version.h | sed 's/^.*CODE //'`
  if test $ac_linux_version_code -ge 131584 -a $ac_linux_version_code -lt 131840; then
    provisions="linux_2_2 $provisions"
  elif test $ac_linux_version_code -ge 132096 -a $ac_linux_version_code -lt 132352; then
    provisions="linux_2_4 $provisions"
  fi
fi

dnl add `int64' if 64-bit integers are available
if test "x$have_int64_types" = xyes; then
  provisions="int64 $provisions"
fi

AC_SUBST(provisions)

dnl
dnl Output
dnl

config_files="Makefile click-compile tools/Makefile tools/lib/Makefile doc/Makefile etc/libclick/Makefile"
for ac_dir in $POSSIBLE_TARGETS; do
  config_files="$config_files $ac_dir/Makefile"
done
for ac_dir in $TOOLDIRS; do
  config_files="$config_files tools/$ac_dir/Makefile"
done
for ac_dir in etc include; do
  test ! -d "$ac_dir" && mkdir "$ac_dir"
done

AC_OUTPUT_COMMANDS(for ac_file in $CONFIG_HEADERS; do
  test $ac_file = include/click/config.h:config.h.in && echo > stamp-h
done
for ac_file in $CONFIG_FILES; do
  test $ac_file = click-compile && chmod +x click-compile
done)
AC_OUTPUT($config_files)
