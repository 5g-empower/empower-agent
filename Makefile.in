# Warning: this file must be usable by regular make
# (unlike the Makefiles in subdirectories).

SHELL = @SHELL@
@SUBMAKE@

PACKAGE = click
VERSION = @CLICK_VERSION@

top_srcdir = @top_srcdir@
srcdir = @srcdir@
top_builddir = .
subdir = .
AUTOHEADER = @AUTOHEADER@
AUTOCONF = @AUTOCONF@
PERL = @PERL@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL@ -m 644
INSTALL_DATA_IF_CHANGED = @INSTALL_IF_CHANGED@ -m 644
mkinstalldirs = @top_srcdir@/mkinstalldirs

prefix = @prefix@
exec_prefix = @exec_prefix@
includedir = @includedir@/click
bindir = @bindir@
datadir = @datadir@/click

all: @TARGETS@ tools Makefile

linuxmodule: Makefile stamp-h
	@cd linuxmodule && $(MAKE) all
userlevel: Makefile stamp-h
	@cd userlevel && $(MAKE) all
exopc: Makefile stamp-h
	@cd exopc && $(MAKE) all
tools: Makefile
	@cd tools && $(MAKE) all

install: stamp-h
	@for d in @TARGETS@ tools; do (cd $$d && $(MAKE) install) || exit 1; done
	@$(MAKE) install-local install-doc install-include
install-local: elementmap $(srcdir)/click-buildtool click-compile $(srcdir)/click-mkelemmap
	$(mkinstalldirs) $(bindir)
	$(INSTALL) $(srcdir)/click-buildtool $(bindir)/click-buildtool
	$(INSTALL) click-compile $(bindir)/click-compile
	$(INSTALL) $(srcdir)/click-mkelemmap $(bindir)/click-mkelemmap
	$(mkinstalldirs) $(datadir)
	$(INSTALL_DATA) elementmap $(datadir)/elementmap
	(cd $(top_srcdir); pwd) > $(datadir)/srcdir
	/bin/rm -rf $(datadir)/src
	/bin/ln -s `cd $(top_srcdir); pwd` $(datadir)/src
install-doc:
	@cd doc && $(MAKE) install
install-man:
	@-for d in @TARGETS@ tools doc; do (cd $$d && $(MAKE) install-man); done
# note: install-include installs include/click/config.h, not config.h
install-include: stamp-h
	$(mkinstalldirs) $(includedir)
	$(INSTALL_DATA_IF_CHANGED) $(srcdir)/include/click/*.* $(includedir)
	$(INSTALL_DATA_IF_CHANGED) $(top_builddir)/include/click/config.h $(includedir)

elemlist elemlists:
	for dir in @TARGETS@; do \
	  echo $$dir @element_groups@ | (cd $(top_srcdir); ./click-buildtool findelem) > $$dir/elements.conf; \
	done

elementmap: $(srcdir)/click-buildtool $(srcdir)/click-mkelemmap always
	(cd $(top_srcdir); ./click-buildtool findelem -a | $(PERL) ./click-mkelemmap -f -) > elementmap
always:
	@:

click-compile: $(srcdir)/click-compile.in
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
	@chmod +x click-compile; touch click-compile

$(srcdir)/configure: $(srcdir)/configure.in $(srcdir)/acconfig.h
	cd $(srcdir) && $(AUTOHEADER)
	cd $(srcdir) && $(AUTOCONF)
	$(SHELL) $(srcdir)/configure @ac_configure_args@
Makefile: $(srcdir)/configure $(srcdir)/Makefile.in
	cd $(top_builddir) && \
	  CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status
config.h: stamp-h
stamp-h: $(srcdir)/config.h.in config.status
	cd $(top_builddir) \
	  && CONFIG_FILES= CONFIG_HEADERS='config.h include/click/config.h:config.h.in' $(SHELL) ./config.status
	echo > stamp-h

check-filenames:
	@a=`find . \( -name \*.cc -or -name \*.c \) -print | sed 's/.*\/\(.*\)\.c*$$/\1.o/' | grep -v 'elements\.o' | sort | uniq -d`; \
	if test -z $$a; then echo OK; else echo "*** warning: duplicate object file names:"; echo "$$a"; fi

clean:
	@-for d in @POSSIBLE_TARGETS@ tools doc; do (cd $$d && $(MAKE) clean); done
	-rm -f elementmap
distclean:
	@-for d in @POSSIBLE_TARGETS@ tools doc; do (cd $$d && $(MAKE) distclean); done
	-rm -f config.h Makefile config.status
	-rm -f config.cache config.log click-compile stamp-h


distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)

dist: distdir
distdir:
	-rm -rf $(distdir)
	mkdir $(distdir)
	@-chmod 777 $(distdir)
	@echo Copying library, documentation, configuration, and driver files...
	@for file in `cat $(srcdir)/DISTFILES`; do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    mkdir $(distdir)/$$file; \
	    chmod 777 $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	@echo Copying element files...
	@mkdir $(distdir)/elements
	@-chmod 777 $(distdir)/elements
	@d=$(srcdir); \
	for dir in `cd $$d && find elements -type d | grep -v 'exopc\|CVS'`; do \
	  mkdir $(distdir)/$$dir 2>/dev/null; \
	  chmod 777 $(distdir)/$$dir; \
	  for cfile in `cd $$d && find $$dir -maxdepth 1 \( -name \[^,.]\*.cc -or -name \[^,.]\*.c -or -name \[^,.]\*.hh -or -name \[^,.]\*.h -or -name README \) -print`; do \
	    ln $$d/$$cfile $(distdir)/$$cfile; \
	  done; \
	done
	@echo Removing files not meant for distribution...
	@if test -r $(srcdir)/NODIST; then \
	for i in `cat $(srcdir)/NODIST`; do \
	  rm -rf $(distdir)/$$i; \
	done; fi
	@if grep -q benjie `find $(srcdir)/etc -maxdepth 1 -type f`; then \
	  echo 'ERROR: Benjie must be punished!'; exit 1; \
	fi


.PHONY: all always elemlist elemlists \
	linuxmodule userlevel exopc tools clean distclean dist distdir \
	install install-doc install-man install-local install-include
