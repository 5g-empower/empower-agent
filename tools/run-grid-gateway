#!/usr/bin/perl 
# run-grid-gateway
# Douglas S. J. De Couto
# stolen from run-grid-node

# $Id: run-grid-gateway,v 1.2 2000/08/06 22:30:58 decouto Exp $

# assume we run in <clickdir>/conf XXX

# other problems: assumes 24 bit netmasks; confusing parameter naming

$debug = 0;

$click = "../userlevel/click";
$click_debug = "cat";
$click_config_name = "../conf/grid-gateway2.click";


$grid_channel = "5";

$CONTROL_PORT = "7777";
$CONTROL_RO = "false";

$POS_LAT = "0";
$POS_LON = "0";
$RANGE = "250";
$GRID_GW = "18.26.7.1";
$GRID_NETMASK = "255.255.255.0";
$GRID_NET = "18.26.7.0";
$GRID_NET_HEX = net_to_hex($GRID_NET);
$NBR_TIMEOUT = "2000"; # msecs
$HELLO_PERIOD = "500"; # msecs
$HELLO_JITTER = "100"; # msecs
$LR_PERIOD = "1300"; # msecs
$LR_JITTER = "300"; # msecs
$GRID_ETH_PROTO = "7FFF";
$GRID_NBR_ENCAP_PROTO = "03";

# gateway stuff...

sub ip_to_hex {
    ($a, $b, $c, $d) = @_[0] =~ /(\d+)\.(\d+)\.(\d+)\.(\d+)/;
    return sprintf("%02x%02x%02x%02x", $a, $b, $c, $d);
}
	
sub net_to_hex {
    # expects 3 digits: a.b.c
    ($a, $b, $c) = @_[0] =~ /(\d+)\.(\d+)\.(\d+)/;
    return sprintf("%02x%02x%02x", $a, $b, $c);
}

sub my_system {
    if ($debug) {
	print @_, "\n";
    }
    else {
	system @_;
    }
}

if (@ARGV < 2) { 
    print stderr "usage: $0 <grid-interface> <lan-interface> [-debug -no-cleanup  -pos <lat> <lon> -range <rng>]\n";
    exit 1;
}

$system_type = `uname`;
if (!($system_type =~ /Linux/ || 
      $system_type =~ /FreeBSD/)) {
    print stderr "This system is not supported\n";
    exit 1;
}

$do_cleanup = 1;
$grid_addr = $GRID_GW; # !!!!
$grid_if = $ARGV[0];
$grid_gw = $GRID_GW;

$lan_if = $ARGV[1];


$i = 0;
for ($i = 2; $i < @ARGV; $i++) {
    if ($ARGV[$i] eq "-debug") {
	$debug = 1;
	$click = $click_debug;
	$CONTROL_RO = "false";
	print "Using DEBUG command\n";
	print "ControlSocket is write-enabled\n";
    }
    if ($ARGV[$i] eq "-no-cleanup") {
	$do_cleanup = 0;
    }
    if ($ARGV[$i] eq "-pos") {
	if (@ARGV - $i < 3) {
	    print "must specify position as `lat lon'\n";
	    exit 1;
	}
	$i++;
	$POS_LAT = $ARGV[$i];
	$i++;
	$POS_LON = $ARGV[$i];
    }
    if ($ARGV[$i] eq "-range") {
	if (@ARGV - $i < 2) {
	    print "must specify range\n";
	    exit 1;
	}
	$i++;
	$RANGE = $ARGV[$i];
    }
}

print "Running Grid gateway with Grid address $grid_addr on interface $grid_if, ad-hoc channel $grid_channel.\n";

# get MAC address and other net info for figuring out gateway info and
# restoring setting after click ends.

$ifconfig_out = `ifconfig $grid_if`;
$grid_hw_addr = "";
$old_ip = "";
$old_netmask = "";
$old_bcast = "";
$old_grid_dev_gw = "";
$old_grid_dev_net = "";
$tun_dev_type = "";

$lan_addr = "";
$lan_hw_addr = "";
$old_lan_netmask = "";
$old_lan_bcast = "";
$lan_gw = "";
$lan_net = "";

if ($system_type =~ /Linux/) {
    if (!($ifconfig_out =~ /(([a-fA-F0-9]{2}:){5}[0-9a-fA-F]{2})/)) {
	print "Unable to get Grid device MAC address\n";
	exit 1;
    }
    else {
	$grid_hw_addr = $1;
    }
    if (!($ifconfig_out =~ /inet addr:(\d+.\d+.\d+.\d+)/)) {
	print "Unable to get old Grid device IP address\n";
    }
    else {
	$old_ip_addr = $1;
	if (!($old_ip_addr =~ /(\d+.\d+.\d+).\d+/)) {
	    print "Unable to get Grid device net address\n";
	    exit 1;
	}
	$old_grid_dev_net = "$1"; # keep as only the first 3 digits
    }
    if (!($ifconfig_out =~ /Mask:(\d+.\d+.\d+.\d+)/)) {
	print "Unable to get old Grid device netmask\n";
    }
    else {
	$old_netmask = $1;
    }
    if (!($ifconfig_out =~ /Bcast:(\d+.\d+.\d+.\d+)/)) {
	print "Unable to get old Grid device broadcast address\n";
    }
    else {
	$old_bcast = $1;
    }

    # get LAN device params for routing
    $ifconfig_lan_out = `ifconfig $lan_if`;
    if (!($ifconfig_lan_out =~ /(([a-fA-F0-9]{2}:){5}[0-9a-fA-F]{2})/)) {
	print "Unable to get LAN device MAC address\n";
	exit 1; # we really need to know that...
    }
    else {
	$lan_hw_addr = $1;
    }
    if (!($ifconfig_lan_out =~ /inet addr:(\d+.\d+.\d+.\d+)/)) {
	print "Unable to get LAN device IP address\n";
	exit 1;
    }
    else {
	$lan_addr = $1;
	if (!($lan_addr =~ /(\d+.\d+.\d+).\d+/)) {
	    print "Unable to get LAN device net address\n";
	    exit 1;
	}
	$lan_net = "$1"; # keep as only the first 3 digits
    }
    if (!($ifconfig_lan_out =~ /Mask:(\d+.\d+.\d+.\d+)/)) {
	print "Unable to get LAN device netmask\n";
    }
    else {
	$old_lan_netmask = $1;
    }
    if (!($ifconfig_lan_out =~ /Bcast:(\d+.\d+.\d+.\d+)/)) {
	print "Unable to get LAN device broadcast address\n";
    }
    else {
	$old_lan_bcast = $1;
    }

    $route_info = `route -n`;
    if (!($route_info =~ /\n0.0.0.0\s+($lan_net.\d+)/)) {
	print "Unable to get LAN device gateway\n";
	exit 1;
    }
    else {
	$lan_gw = $1;
    }
    if (!($route_info =~ /\n0.0.0.0\s+($old_grid_dev_net.\d+)/)) {
	print "Unable to get Grid device gateway\n";
    }
    else {
	$old_grid_dev_gw = $1;
    }

    $tun_dev = "tap";
}
elsif ($system_type =~ /FreeBSD/) {
    print "BROKEN\n";
    exit 1;

    if (!($ifconfig_out =~ /(([a-fA-F0-9]{2}:){5}[0-9a-fA-F]{2})/)) {
	print "Unable to get MAC address\n";
	exit 1;
    }
    $grid_hw_addr = $1;
    if (!($ifconfig_out =~ /\n\s+inet (\d+.\d+.\d+.\d+)/)) {
	print "Unable to get old IP address\n";
    }
    else {
	$old_ip_addr = $1;
    }
    if (!($ifconfig_out =~ /netmask (0x[0-9a-fA-F]{8})/)) {
	print "Unable to get old netmask\n";
    }
    else {
	$old_netmask = $1;
    }
    if (!($ifconfig_out =~ /broadcast (\d+.\d+.\d+.\d+)/)) {
	print "Unable to get old broadcast address\n";
    }
    else {
	$old_bcast = $1;
    }

    $route_info = `route -n get default`;
    if (!($route_info =~ /\n\s+gateway: (\d+.\d+.\d+.\d+)/)) {
	print "Unable to get old gateway\n";
    }
    else {
	$old_gw = $1;
    }

    $tun_dev = "tun";
}
else {
    print stderr "This system is not supported\n";
    exit 1;
}


print "Using LAN address $lan_addr, gateway $lan_gw\n";

if ($system_type =~ /Linux/) {
    # remove all routes through the grid interface, and make sure it is up
    my_system "ifconfig $grid_if down";
    my_system "ifconfig $grid_if 0";

    # set the adapter to ad-hoc mode
    my_system "iwconfig $grid_if mode ad-hoc channel $grid_channel";

    # remove LAN device routes, and set up through click tunnel
    my_system "ifconfig $lan_if down";
    my_system "ifconfig $lan_if 0";

}
elsif ($system_type =~ /FreeBSD/) {
    # remove all routes through the grid interface, and make sure it is up
    # assume the default route was the one through the adapter! XXX
    my_system "route -n delete default";
    my_system "ifconfig $grid_if 0";

    # set the adapter to ad-hoc mode
    my_system "wicontrol -i $grid_if -p 3";
    my_system "wicontrol -i $grid_if -f $grid_channel";
}
else {
    print stderr "This system is not supported\n";
    exit 1;
}


# fire up click, substituting appropriate values into the config file,
# and piping it into click stdin.

open(click_config_file, $click_config_name) || die "can't open click configuration ", $click_config_name, "\n";

$grid_addr_hex = ip_to_hex($grid_addr);
$gw_addr_hex = ip_to_hex($lan_addr);
$gw_net_hex = net_to_hex($lan_net);

open(P, "| $click");
while(<click_config_file>) {

    s/CONTROL_PORT/$CONTROL_PORT/;
    s/CONTROL_RO/$CONTROL_RO/;
    s/RANGE/$RANGE/;
    s/POS_LAT/$POS_LAT/;
    s/POS_LON/$POS_LON/;
    s/GRID_NETMASK/$GRID_NETMASK/;
    s/GRID_NET_HEX/$GRID_NET_HEX/;
    s/NBR_TIMEOUT/$NBR_TIMEOUT/;
    s/HELLO_PERIOD/$HELLO_PERIOD/;
    s/HELLO_JITTER/$HELLO_JITTER/;
    s/LR_PERIOD/$LR_PERIOD/;
    s/LR_JITTER/$LR_JITTER/;
    s/GRID_ETH_PROTO/$GRID_ETH_PROTO/;
    s/GRID_NBR_ENCAP_PROTO/$GRID_NBR_ENCAP_PROTO/;
    s/GRID_GW/$grid_gw/;
    s/GRID_IP/$grid_addr/;
    s/GRID_HEX_IP/$grid_addr_hex/;
    s/WI_NET_DEVICE/$grid_if/;
    s/GRID_MAC_ADDR/$grid_hw_addr/;
    s/TUN_DEVICE_PREFIX/$tun_dev/;

    # gateway stuff
    s/GW_IP/$lan_addr/;
    s/GW_NETMASK/$old_lan_netmask/;
    s/GW_HEX_IP/$gw_addr_hex/;
    s/GW_HEX_NET/$gw_net_hex/;
    s/GW_REAL_IP/$lan_gw/;
    s/GW_NET_DEVICE/$lan_if/;
    s/GW_MAC_ADDR/$lan_hw_addr/;
    s/GRID_NET/$GRID_NET/;

    print P $_;
}
close P;
close click_config_file;


if ($do_cleanup) {
    print "Cleaning up...\n";

    if ($system_type =~ /Linux/) {
	my_system "ifconfig $grid_if $old_ip_addr netmask $old_netmask broadcast $old_bcast";
	my_system "iwconfig $grid_if mode managed";	
	my_system "ifconfig $lan_if $lan_addr netmask $old_lan_netmask broadcast $old_lan_bcast";
	my_system "route add default gw $lan_gw";
	if ($old_grid_dev_gw) {
	    my_system "route add default gw $old_grid_dev_gw";
	}
    }

    elsif ($system_type =~ /FreeBSD/) {
	my_system "ifconfig $grid_if $old_ip_addr netmask $old_netmask broadcast $old_bcast";
	my_system "wicontrol -i $grid_if -p 1";
	if ($grid_gw != "0.0.0.0") {
	    my_system "route delete default";
	    my_system "route add default $old_gw";
	}

    }
    else {
	print stderr "This system is not supported\n";
	exit 1;
    }
}











