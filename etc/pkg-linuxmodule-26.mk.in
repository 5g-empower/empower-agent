# pkg-linuxmodule-26.mk -- build tools for Click
# Eddie Kohler
#
# Copyright (c) 2006 Regents of the University of California
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, subject to the conditions
# listed in the Click LICENSE file. These conditions include: you must
# preserve this copyright notice, and you cannot mention the copyright
# holders in advertising related to the Software without their permission.
# The Software is provided WITHOUT ANY WARRANTY, EXPRESS OR IMPLIED. This
# notice is a summary of the Click LICENSE file; the license in that file is
# legally binding.

CLICKBUILD = linux26module

CLICKCC = @KERNEL_CC@
CLICKCPP = @CPP@
CLICKCXX = @KERNEL_CXX@
CLICKCXXCPP = @CXXCPP@

CLICKCPPFLAGS = @CPPFLAGS@ -DCLICK_LINUXMODULE
CLICKCFLAGS = @CFLAGS_NDEBUG@
CLICKCXXFLAGS = @CXXFLAGS_NDEBUG@
CLICKDEPCFLAGS = -Wp,-MD,$(depfile)

CLICKDEFS = @DEFS@
CLICKINCLUDES = -I$(clickincludedir) -I$(clicksrcdir) -I$(clicklinuxdir)/include

LINUXCFLAGS = $(shell echo "$(CFLAGS)" | sed -e s,-fno-unit-at-a-time,, \
	-e s,-Wstrict-prototypes,, -e s,-Wdeclaration-after-statement,, \
	-e s,-Wno-pointer-sign,, -e s,-fno-common,,)

CXXFLAGS ?= $(CLICKCXXFLAGS)
DEPCFLAGS ?= $(CLICKDEPCFLAGS)

DEFS ?= $(CLICKDEFS)
INCLUDES ?= $(CLICKINCLUDES)

CXXCOMPILE = $(CLICKCXX) $(LINUXCFLAGS) $(CLICKCPPFLAGS) $(CLICKCFLAGS) \
	$(CXXFLAGS) $(DEFS) $(INCLUDES) $(DEPCFLAGS)
COMPILE = $(CLICKCC) $(LINUXCFLAGS) $(CLICKCPPFLAGS) $(CLICKCFLAGS) \
	$(DEFS) $(INCLUDES) $(DEPCFLAGS)

packagesrcdir ?= $(srcdir)
PACKAGE_OBJS ?= kpackage.ko

CLICK_BUILDTOOL ?= $(clickbindir)/click-buildtool
CLICK_ELEM2PACKAGE ?= $(CLICK_BUILDTOOL) elem2package $(ELEM2PACKAGE_INCLUDES)

quiet_cmd_cxxcompile = CXX $(quiet_modtag) $(subst $(obj)/,,$@)
cmd_cxxcompile = $(CXXCOMPILE) -c -o $@ $<

quiet_cmd_ccompile = CC $(quiet_modtag) $(subst $(obj)/,,$@)
cmd_ccompile = $(COMPILE) -c -o $@ $<

EXTRA_CFLAGS += $(CLICKCPPFLAGS) $(CLICKCFLAGS) $(CLICKDEFS) $(CLICKINCLUDES) 

ifneq ($(KBUILD_EXTMOD),)
ifeq ($(srcdir),.)
top_srcdir := $(src)/..
srcdir := $(src)
else
ifneq ($(patsubst /%,/,$(srcdir)),/)
top_srcdir := $(obj)/$(top_srcdir)
srcdir := $(obj)/$(srcdir)
endif
top_builddir := $(obj)/$(top_builddir)
builddir := $(obj)
endif

-include $(obj)/kelements.mk

$(package)-objs := $(ELEMENT_OBJS) $(PACKAGE_OBJS) kversion.ko
endif

obj-m += $(package).o

$(obj)/kelements.conf: $(CLICK_BUILDTOOL)
	echo $(packagesrcdir) | $(CLICK_BUILDTOOL) findelem -r linuxmodule -r $(package) -P $(CLICKFINDELEMFLAGS) > $(obj)/kelements.conf
$(obj)/kelements.mk: $(obj)/kelements.conf $(CLICK_BUILDTOOL)
	$(CLICK_BUILDTOOL) elem2make -t linuxmodule < $(obj)/kelements.conf > $(obj)/kelements.mk
$(obj)/kpackage.ko: $(obj)/kpackage.cc
	$(call if_changed_dep,cxxcompile)
$(obj)/kpackage.cc: $(obj)/kelements.conf $(CLICK_BUILDTOOL)
	$(CLICK_ELEM2PACKAGE) $(package) < $(obj)/kelements.conf > $(obj)/kpackage.cc
	@rm -f $(obj)/kpackage.kd
$(obj)/kversion.ko: $(obj)/kversion.c
	$(call if_changed_dep,ccompile)
$(obj)/kversion.c: $(CLICK_BUILDTOOL)
	$(CLICK_BUILDTOOL) kversion $(KVERSIONFLAGS) > $(obj)/kversion.c

DEPFILES := $(wildcard *.kd)
ifneq ($(DEPFILES),)
include $(DEPFILES)
endif

.PHONY: clean elemlist
