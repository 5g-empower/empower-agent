dnl Process this file with autoconf to produce a configure script.
AC_INIT(pathvars.h.in)
AC_CONFIG_HEADER(include/click/config.h:config.h.in include/click/pathvars.h:pathvars.h.in)

CLICK_VERSION=1.2.1a

AC_SUBST(ac_configure_args)
AC_DEFINE_UNQUOTED(CLICK_VERSION, "$CLICK_VERSION")
AC_SUBST(CLICK_VERSION)

CLICK_INIT('$(top_srcdir)')

dnl support for cross compiling
AC_CANONICAL_SYSTEM

dnl This is wrong!!
AC_CHECK_TOOL(CC, gcc)
AC_CHECK_TOOL(CXX, g++)

CLICK_PROG_CC
AC_PROG_CPP

CLICK_PROG_CXX
AC_PROG_CXXCPP

AC_CHECK_TOOL(AR, ar)
AC_CHECK_TOOL(LD, ld)
AC_CHECK_TOOL(RANLIB, ranlib, :)
AC_CHECK_TOOL(STRIP, strip, :)

conf_auxdir='$(top_srcdir)'
AC_SUBST(conf_auxdir)


dnl
dnl build userlevel? Linux module? are we compiling on Linux?
dnl

AC_ARG_ENABLE(userlevel, [  --disable-userlevel     disable user-level driver], :, enable_userlevel=yes)
AC_ARG_ENABLE(linuxmodule, [  --disable-linuxmodule   disable Linux kernel driver], :, enable_linuxmodule=yes)

AC_ARG_WITH(linux, [  --with-linux[=DIR]      Linux source code is in DIR [/usr/src/linux]],
  [linuxdir=$withval; if test -z "$withval" -o "$withval" = yes; then linuxdir=/usr/src/linux; fi],
  linuxdir=NONE)

if test "x$linuxdir" = xNONE -o "x$linuxdir" = xno; then
  if test -d /usr/src/linux; then
    linuxdir=/usr/src/linux
  elif test "x$enable_linuxmodule" = xyes; then
    AC_MSG_WARN([can't find /usr/src/linux; not compiling for Linux
  (or try the --with-linux=DIR option)])
  fi
fi

if test "x$linuxdir" = xNONE -o "x$linuxdir" = xno -o "x$enable_linuxmodule" != xyes; then
  ac_have_linux_kernel=n
  linuxdir=NONE
elif test -r $linuxdir/include/linux/skbuff.h; then
  ac_have_linux_kernel=y
else
  AC_MSG_ERROR([can't find $linuxdir/include/linux/skbuff.h:
  are you sure $linuxdir holds the Linux source code?])
fi
AC_SUBST(linuxdir)
AC_DEFINE_UNQUOTED(LINUX_SRCDIR, "${linuxdir}")

AC_CACHE_CHECK(whether we are compiling for Linux, ac_cv_under_linux,
  AC_TRY_COMPILE([], [#ifndef __linux__
#error "fuckers! fuckers!"
#endif
return 0;], ac_cv_under_linux=yes, ac_cv_under_linux=no))


dnl
dnl multithread support?
dnl

AC_ARG_ENABLE(multithread,
  [  --enable-multithread[=NUM]
                          support kernel multithreading with NUM threads max],
  :, enable_multithread=no)

if test "$enable_multithread" = yes; then
  enable_multithread=4
fi
if test "$enable_multithread" != no; then
  AC_DEFINE_UNQUOTED(NUM_CLICK_CPUS, $enable_multithread)
  AC_DEFINE_UNQUOTED(__MTCLICK__, 1)
  saveflags="$CPPFLAGS"
  CPPFLAGS="$saveflags -D__MTCLICK__"
else
  AC_DEFINE_UNQUOTED(NUM_CLICK_CPUS, 1)
fi


dnl
dnl functions
dnl

AC_REPLACE_FUNCS(strerror)
AC_CHECK_FUNCS(strtoul)


dnl
dnl integer types
dnl

AC_ARG_ENABLE(int64, [  --disable-int64         disable 64-bit integer support], :, enable_int64=yes)

AC_CHECK_HEADERS(inttypes.h, have_inttypes_h=yes, have_inttypes_h=no)

if test $have_inttypes_h = no; then
  AC_CACHE_CHECK(for uintXX_t typedefs, ac_cv_uint_t,
[AC_EGREP_HEADER(uint32_t, sys/types.h, ac_cv_uint_t=yes, ac_cv_uint_t=no)])
  if test $ac_cv_uint_t = no; then
    AC_MSG_ERROR("uint32_t not defined by <inttypes.h> or <sys/types.h>!")
  fi
fi

if test "x$enable_int64" = xyes; then

  if test $have_inttypes_h = yes; then
    inttypes_hdr='inttypes.h'
  else
    inttypes_hdr='sys/types.h'
  fi

  AC_CACHE_CHECK(for int64_t typedef, ac_cv_int64_t,
[AC_EGREP_HEADER(int64_t, $inttypes_hdr, ac_cv_int64_t=yes, ac_cv_int64_t=no)])
  AC_CACHE_CHECK(for uint64_t typedef, ac_cv_uint64_t,
[AC_EGREP_HEADER(uint64_t, $inttypes_hdr, ac_cv_uint64_t=yes, ac_cv_uint64_t=no)])

  if test $ac_cv_int64_t = no -o $ac_cv_uint64_t = no; then
    AC_MSG_ERROR(int64_t types not defined by $inttypes_hdr!
Compile with "'`'"--disable-int64'.)
  else
    AC_DEFINE_UNQUOTED(HAVE_INT64_TYPES)
  fi
fi


dnl
dnl headers, dynamic linking, pcap
dnl

AC_CHECK_HEADERS(unistd.h)
CLICK_CHECK_DYNAMIC_LINKING
CLICK_CHECK_LIBPCAP


dnl
dnl sockets
dnl

SOCKET_LIBS=
dnl AC_CHECK_LIB(nsl, gethostbyname, SOCKET_LIBS="-lnsl $SOCKET_LIBS")
AC_CHECK_LIB(socket, connect, SOCKET_LIBS="-lsocket $SOCKET_LIBS")
AC_SUBST(SOCKET_LIBS)


dnl
dnl mmap
dnl

AC_LANG_C
AC_CHECK_HEADERS(sys/mman.h)
AC_FUNC_MMAP
AC_CHECK_FUNCS(madvise)
AC_LANG_CPLUSPLUS


dnl
dnl element collections
dnl

dnl ELEMENTS_ARG_ENABLE(COLLECTION, HELP-STRING, DEFAULT-VALUE)
element_groups=""
AC_SUBST(element_groups)
AC_DEFUN(ELEMENTS_ARG_ENABLE,
[AC_ARG_ENABLE($1, builtin(format, [  %-23s %s%s], builtin(format, [--%sable-%s], builtin(ifelse, [$3], yes, dis, en), [$1]), builtin(ifelse, [$3], yes, [do not ], []), [[$2]]), ,
[enable_]patsubst([$1], -, _)=$3)dnl
if test ["x$enable_]patsubst([$1], -, _)["] = xyes; then
  element_groups="$element_groups $1"
  $4
fi])

ELEMENTS_ARG_ENABLE(ipsec, [include IP security elements], no, AC_DEFINE(HAVE_IPSEC))
ELEMENTS_ARG_ENABLE(ip6, [include IPv6 elements (EXPERIMENTAL)], no, AC_DEFINE(HAVE_IP6))
ELEMENTS_ARG_ENABLE(warp9, [reduce PollDevice functionality for speed], no, AC_DEFINE(CLICK_WARP9))

elements_vpath=`echo "$element_groups" | sed -e ['s/ \([^ ][^ ]*\)/:$(top_srcdir)\/elements\/\1/g']`
AC_SUBST(elements_vpath)


dnl
dnl objects required by element collections
dnl

EXTRA_DRIVER_OBJS=
EXTRA_TOOL_OBJS=
if test "x$enable_ip6" = xyes; then
  EXTRA_DRIVER_OBJS="ip6address.o ip6flowid.o ip6table.o $EXTRA_DRIVER_OBJS"
  EXTRA_TOOL_OBJS="ip6address.o $EXTRA_TOOL_OBJS"
fi
AC_SUBST(EXTRA_DRIVER_OBJS)
AC_SUBST(EXTRA_TOOL_OBJS)


dnl
dnl use Intel-specific machine instructions
dnl

AC_ARG_ENABLE(intel-cpu, [  --enable-intel-cpu      enable Intel-specific machine instructions], :, enable_intel_cpu=no)
if test $enable_intel_cpu = yes; then
  AC_DEFINE_UNQUOTED(HAVE_INTEL_CPU, 1)
fi


dnl
dnl type of scheduling
dnl

AC_ARG_ENABLE(stride, [  --disable-stride        disable stride scheduler], :, enable_stride=yes)
if test $enable_stride = yes; then
  AC_DEFINE_UNQUOTED(HAVE_STRIDE_SCHED, 1)
fi


dnl
dnl debugging malloc
dnl

AC_ARG_ENABLE(dmalloc, [  --enable-dmalloc        enable debugging malloc], :, enable_dmalloc=no)
if test $enable_dmalloc = yes; then
  AC_DEFINE_UNQUOTED(CLICK_DMALLOC, 1)
fi


dnl
dnl programs needed for build process
dnl

CLICK_PROG_INSTALL
CLICK_PROG_GMAKE
CLICK_PROG_AUTOCONF
CLICK_PROG_PERL5


dnl
dnl set path variables
dnl

shell_expand () {
  val=`eval echo '$'"$1"`
  while echo "x$val" | fgrep '$' >/dev/null 2>&1; do val=`eval echo "$val"`; done
  eval "$1='$val'"
}

dnl Preset $prefix and $exec_prefix.
test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

dnl Expand 'infodir' to check for Red Hat
if test x$infodir = 'x${prefix}/info'; then
  test ! -d ${prefix}/info && test -d ${prefix}/share/info && infodir='${prefix}/share/info'
fi

shell_expand bindir
shell_expand libdir
shell_expand datadir
shell_expand infodir

AC_DEFINE_UNQUOTED(CLICK_BINDIR, "$bindir")
AC_DEFINE_UNQUOTED(CLICK_LIBDIR, "$libdir")
AC_DEFINE_UNQUOTED(CLICK_SHAREDIR, "$datadir/click")
AC_DEFINE_UNQUOTED(CLICK_INFODIR, "$infodir")


dnl
dnl Output
dnl

test ! -d include && mkdir include
config_files="Makefile click-compile libsrc/Makefile"

AC_OUTPUT_COMMANDS(for ac_file in $CONFIG_HEADERS; do
  test $ac_file = include/click/config.h:config.h.in && echo > stamp-h
done
for ac_file in $CONFIG_FILES; do
  test $ac_file = click-compile && chmod +x click-compile
  test -z "$GMAKE" && echo $ac_file | grep Makefile >/dev/null && $ac_given_srcdir/missing gmake $ac_file
done, GMAKE="$GMAKE")
AC_OUTPUT($config_files)
