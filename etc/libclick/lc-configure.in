dnl -*- mode: shell-script -*-
dnl Process this file with autoconf to produce a configure script.
AC_INIT(pathvars.h.in)
AC_CONFIG_HEADER(include/click/config.h:config.h.in include/click/pathvars.h:pathvars.h.in include/click/config-userlevel.h:config-userlevel.h.in)

CLICK_VERSION=1.3

AC_SUBST(ac_configure_args)
AC_DEFINE_UNQUOTED(CLICK_VERSION, "$CLICK_VERSION")
AC_SUBST(CLICK_VERSION)

CLICK_INIT('$(top_srcdir)')

dnl support for cross compiling
AC_CANONICAL_SYSTEM

dnl This is wrong!!
AC_CHECK_TOOL(CC, gcc)
AC_CHECK_TOOL(CXX, g++)

CLICK_PROG_CC
AC_PROG_CPP
AC_C_INLINE

CLICK_PROG_CXX
AC_PROG_CXXCPP

ac_preset_ar="$AR"
AC_CHECK_TOOL(AR, ar)
AC_CHECK_TOOL(LD, ld)
AC_CHECK_TOOL(RANLIB, ranlib, :)
AC_CHECK_TOOL(STRIP, strip, :)

conf_auxdir='$(top_srcdir)'
AC_SUBST(conf_auxdir)

if test -z "$ac_preset_ar" -a -z "$AR_CREATEFLAGS"; then
    AR_CREATEFLAGS=cru
fi
AC_SUBST(AR_CREATEFLAGS)


dnl
dnl check whether target is Linux
dnl

AC_CACHE_CHECK(whether we are compiling for Linux, ac_cv_under_linux,
  AC_TRY_COMPILE([], [#ifndef __linux__
#error "fuckers! fuckers!"
#endif
return 0;], ac_cv_under_linux=yes, ac_cv_under_linux=no))


dnl
dnl multithread support?
dnl

AC_ARG_ENABLE(multithread,
  [  --enable-multithread[[=NUM]] support kernel multithreading; NUM threads max],
  :, enable_multithread=no)

if test "$enable_multithread" = yes; then
  enable_multithread=4
fi
if test "$enable_multithread" != no; then
  AC_DEFINE_UNQUOTED(NUM_CLICK_CPUS, $enable_multithread)
  AC_DEFINE_UNQUOTED(__MTCLICK__, 1)
  saveflags="$CPPFLAGS"
  CPPFLAGS="$saveflags -D__MTCLICK__"
else
  AC_DEFINE_UNQUOTED(NUM_CLICK_CPUS, 1)
fi


dnl
dnl functions
dnl

AC_LANG_C
AC_REPLACE_FUNCS(strerror)
AC_CHECK_FUNCS(snprintf strtoul tcgetpgrp vsnprintf)
AC_LANG_CPLUSPLUS


dnl
dnl integer types, endianness, int64, addressable va_list
dnl

AC_ARG_ENABLE(int64, [  --disable-int64         disable 64-bit integer support], :, enable_int64=yes)

CLICK_CHECK_ALIGNMENT
CLICK_CHECK_INTEGER_TYPES
if test "x$enable_int64" = xyes; then
    CLICK_CHECK_INT64_TYPES
fi
CLICK_CHECK_ENDIAN
CLICK_CHECK_ADDRESSABLE_VA_LIST


dnl
dnl headers, dynamic linking
dnl

AC_CHECK_HEADERS(unistd.h termio.h poll.h)
CLICK_CHECK_DYNAMIC_LINKING


dnl
dnl sockets
dnl

AC_LANG_C
SOCKET_LIBS=
if test "$enable_userlevel" = yes; then
    savelibs="$LIBS"; LIBS=
    AC_SEARCH_LIBS(connect, socket, , , $savelibs)
    AC_SEARCH_LIBS(gethostbyname, nsl, , , $savelibs)
    SOCKET_LIBS="$LIBS"; LIBS="$savelibs"
fi
AC_SUBST(SOCKET_LIBS)
AC_LANG_CPLUSPLUS


dnl
dnl large file support
dnl

CLICK_CHECK_LARGE_FILE_SUPPORT


dnl
dnl mmap
dnl

AC_LANG_C
AC_CHECK_HEADERS(sys/mman.h)
AC_FUNC_MMAP
AC_CHECK_FUNCS(madvise)
AC_LANG_CPLUSPLUS


dnl
dnl element collections
dnl

dnl ELEMENTS_ARG_ENABLE(COLLECTION, HELP-STRING, DEFAULT-VALUE)
element_groups=""
AC_SUBST(element_groups)
AC_DEFUN(ELEMENTS_ARG_ENABLE,
[AC_ARG_ENABLE($1, [  --]builtin(substr, builtin(ifelse, [$3], yes, dis, en)[able-$1              ], 0, 21)[ ]builtin(ifelse, [$3], yes, [do not ], [])[$2], ,
[enable_]patsubst([$1], -, _)=$3)dnl
if test ["x$enable_]patsubst([$1], -, _)["] = xyes; then
  element_groups="$element_groups $1"
  $4
fi])

ELEMENTS_ARG_ENABLE(ipsec, [include IP security elements], no, AC_DEFINE(HAVE_IPSEC))
ELEMENTS_ARG_ENABLE(ip6, [include IPv6 elements (EXPERIMENTAL)], no, AC_DEFINE(HAVE_IP6))


dnl
dnl objects required by element collections
dnl

EXTRA_DRIVER_OBJS=
EXTRA_TOOL_OBJS=
if test "x$enable_ip6" = xyes; then
    EXTRA_DRIVER_OBJS="ip6address.o ip6flowid.o ip6table.o $EXTRA_DRIVER_OBJS"
    EXTRA_TOOL_OBJS="ip6address.o $EXTRA_TOOL_OBJS"
fi
AC_SUBST(EXTRA_DRIVER_OBJS)
AC_SUBST(EXTRA_TOOL_OBJS)


dnl
dnl use Intel-specific machine instructions
dnl

AC_ARG_ENABLE(intel-cpu, [  --enable-intel-cpu      enable Intel-specific machine instructions], :, enable_intel_cpu=no)
if test $enable_intel_cpu = yes; then
    AC_DEFINE(HAVE_INTEL_CPU)
fi


dnl
dnl type of scheduling
dnl

AC_ARG_ENABLE(stride, [  --disable-stride        disable stride scheduler], :, enable_stride=yes)
if test $enable_stride = yes; then
    AC_DEFINE(HAVE_STRIDE_SCHED)
fi

AC_ARG_ENABLE(adaptive, [  --enable-adaptive       use adaptive scheduler to flexibly arbitrate between    
                          Click and the kernel (EXPERIMENTAL)], :, enable_adaptive=no)
if test "x$enable_adaptive" = xyes; then
    AC_DEFINE(HAVE_ADAPTIVE_SCHEDULER)
fi

AC_ARG_ENABLE(greedy, [  --enable-greedy         kernel module keeps CPU forever (requires SMP;
                          provides more predictable performance)], :, enable_greedy=no)
if test "x$enable_greedy" = xyes; then
    AC_DEFINE(CLICK_GREEDY)
fi


dnl
dnl debugging malloc
dnl

AC_ARG_ENABLE(dmalloc, [  --enable-dmalloc        enable debugging malloc], :, enable_dmalloc=no)
if test $enable_dmalloc = yes; then
    AC_DEFINE(CLICK_DMALLOC)
fi


dnl
dnl pcap library
dnl note: no longer need pcap under Linux
dnl

CLICK_CHECK_LIBPCAP
AC_DEFINE(HAVE_USERLEVEL_DRIVER)


dnl
dnl programs needed for build process
dnl

CLICK_PROG_INSTALL
CLICK_PROG_GMAKE
CLICK_PROG_AUTOCONF
CLICK_PROG_PERL5

if test -z "$GMAKE"; then
    AC_MSG_ERROR([
==============================================

I can't find GNU make. Either put "'`'"gmake' on your PATH and
rerun "'`'"./configure', or set the GMAKE environment variable to
GNU make's pathname.

==============================================])
fi


dnl
dnl Makeinfo, texi2dvi, install-info
dnl

AC_MSG_CHECKING(for working makeinfo)
MAKEINFO=${MAKEINFO-makeinfo}
if ($MAKEINFO --version) < /dev/null > conftest.out 2>&1; then
  if test `head -1 conftest.out | sed 's/^.* \([[0-9]][[0-9]]*\).*$/\1/'` -ge 4; then
    AC_MSG_RESULT(found)
  else
    MAKEINFO='$(conf_auxdir)/missing makeinfo'
    AC_MSG_RESULT(old)
  fi
else
  MAKEINFO='$(conf_auxdir)/missing makeinfo'
  AC_MSG_RESULT(missing)
fi

AC_MSG_CHECKING(for working texi2dvi)
TEXI2DVI=${TEXI2DVI-texi2dvi}
if ($TEXI2DVI --version) < /dev/null > conftest.out 2>&1; then
  dnl Search for a good version of texi2dvi
  if test `head -1 conftest.out | sed 's/.*Texinfo \([[0-9]][[0-9]]*\).*/\1/'` -ge 4; then
    AC_MSG_RESULT(found)
  else
    TEXI2DVI='$(conf_auxdir)/missing texi2dvi'
    AC_MSG_RESULT(old)
  fi
else
  TEXI2DVI='$(conf_auxdir)/missing texi2dvi'
  AC_MSG_RESULT(missing)
fi

dnl Assume any version of install-info is OK
if test ${INSTALL_INFO-xxx} = xxx; then
  AC_PATH_PROG(INSTALL_INFO, install-info, '$(conf_auxdir)/missing install-info',
	$PATH:/sbin:/usr/sbin:/usr/local/sbin)
fi
AC_MSG_CHECKING(for working install-info)
if ($INSTALL_INFO --version) < /dev/null > conftest.out 2>&1; then
  AC_MSG_RESULT(found)
else
  INSTALL_INFO='$(conf_auxdir)/missing install-info'
  AC_MSG_RESULT(missing)
fi


AC_SUBST(MAKEINFO)
AC_SUBST(TEXI2DVI)
AC_SUBST(INSTALL_INFO)


dnl
dnl set path variables
dnl

shell_expand () {
  val=`eval echo '$'"$1"`
  while echo "x$val" | fgrep '$' >/dev/null 2>&1; do val=`eval echo "$val"`; done
  eval "$1='$val'"
}

dnl Preset $prefix and $exec_prefix.
test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

dnl Expand 'infodir' to check for Red Hat
if test x$infodir = 'x${prefix}/info'; then
  test ! -d ${prefix}/info && test -d ${prefix}/share/info && infodir='${prefix}/share/info'
fi

shell_expand bindir
shell_expand libdir
shell_expand datadir
shell_expand infodir

AC_DEFINE_UNQUOTED(CLICK_BINDIR, "$bindir")
AC_DEFINE_UNQUOTED(CLICK_LIBDIR, "$libdir")
AC_DEFINE_UNQUOTED(CLICK_SHAREDIR, "$datadir/click")
AC_DEFINE_UNQUOTED(CLICK_INFODIR, "$infodir")

dnl
dnl Provisions
dnl

dnl start out with CPU
provisions="$target_cpu"
case "$target_cpu" in
  i386) :;;
  i486|i586) provisions="$provisions i386";;
  i686|i786) provisions="$provisions i386 i586";;
esac

dnl add `int64' if 64-bit integers are available
if test "x$have_int64_types" = xyes; then
    provisions="int64 $provisions"
fi

dnl add `ip6' if ip6 elements are available
if test "x$enable_ip6" = xyes; then
    provisions="ip6 $provisions"
fi

AC_SUBST(provisions)

dnl
dnl Output
dnl

test ! -d include && mkdir include
config_files="Makefile click-compile libsrc/Makefile"

AC_OUTPUT_COMMANDS([for ac_file in $CONFIG_HEADERS; do
  test $ac_file = include/click/config.h:config.h.in && echo > stamp-h
done
for ac_file in $CONFIG_FILES; do
  test $ac_file = click-compile && chmod +x click-compile
  test -z "$GMAKE" && echo $ac_file | grep Makefile >/dev/null && $ac_given_srcdir/missing gmake $ac_file
done], GMAKE="$GMAKE")
AC_OUTPUT($config_files)
