Click NEWS

Version 1.1

* Incompatible element changes

** Added support for parsing CIDR-style [Classless Inter-Domain Routing]
   netmasks in element configuration strings. Old-style netmasks are still
   supported, but you must use a slash, not a space. So for the 18.26.7
   subnet, you can write either `18.26.7.0/255.255.255.0' or
   `18.26.7.0/24'. You will need to change the arguments to any
   ARPResponder, FromLinux, LookupIPRoute, LookupIPRoute2, and RIPSend
   elements in your configuration files.

** Deprecated FromBPF and ToBPF in favor of FromDevice and ToDevice. (But
   the arguments to FromDevice and ToDevice are the same as FromBPF and
   ToBPF.)

** The Tun device no longer takes a device name as the first argument;
   it chooses between /dev/tun and /dev/tap automatically. Tun also
   expects and produces ethernet-encapsulated packets (rather than
   IP); the point is that ether type field lets Tun handle IPv6
   packets as well as IPv4.

** Renamed the SetIPAddress element to StoreIPAddress. Added a different
   SetIPAddress element.

** Removed the SaveIPFields and IPsec elements (they were rotting).

* Incompatible C++ API changes

** Reorganized Linux kernel polling patches. If you have a previous version
   of Click, you must unapply the old kernel patch and apply the new kernel
   patch before compiling.

** Improved Packet copy-on-write behavior by reflecting it in the C++ class
   structure. Now there is a class for possibly-shared packets (named
   Packet), and a class for definitely-not-shared packets (named
   WritablePacket). WritablePacket is a subclass of Packet. Packet's data
   is always read-only (that is, the `data()' method returns a `const
   unsigned char *', and so forth). WritablePacket's data is read/write
   (the `data()' method returns an `unsigned char *').
   `Packet::uniqueify()' and similar methods return a WritablePacket.

** Made configuration argument parsing more uniform among elements. For
   example, every configuration argument is always a comma-separated
   string. This is enforced by passing a vector of strings to the
   `configure' method: `cp_argvec' is called before the `configure' method
   is called. Changed Element method `int configure(const String &,
   ErrorHandler *)' to `int configure(const Vector<String> &, ErrorHandler
   *)', and updated elements.

** The `cp_DATATYPE' functions take pointers instead of references. This
   makes their use easier to read.

** The `cp_DATATYPE' functions no longer take an optional `String *rest'
   argument. They always parse their argument string entirely.

** Changed Element method `bool configure_first() const' to `int
   configure_phase() const'. Now element classes can specify their relative
   configuration and initialization order; for example, ToDevice specifies
   that it should be configured and initialized after any FromDevices.

** Removed user-level Element method `select_fd()'. Replaced with
   `add_select(fd, mask)' and `remove_select(fd, mask)', so elements can
   listen to any number of file descriptors for reading, writing, or both.
   (`mask' is either `SELECT_READ', `SELECT_WRITE', or
   `SELECT_READ|SELECT_WRITE'.)

** Other small changes and method renamings should have limited impact. For
   instance, renamed `Element::number()' to `Element::eindex()'; removed
   `Element::use()' and `Element::unuse()'; renamed
   `Element::change_configuration()' to `Element::set_configuration()' and
   `Element::set_configuration_argument()'.

** Renamed Ethernet and ARP structures; what was `struct ether_header' is
   now `struct click_ether', and so forth, to avoid conflicts.

** Removed `IPVERSION' constant from `click_ip.h' to support IPv6.

* General

** Added new `tickets' and `handlers' handlers, available by default on
   every element. Removed default `inputs' and `outputs' handlers,
   replacing them with `ports'.

** Improved support for large numbers of handlers by reducing memory usage.

** Click configurations can contain cpp(1)-style `#line LINENUMBER' or `#
   LINENUMBER' directives. The tools generate them, too, so you will get
   better error messages than formerly.

** Improved element documentation by adding summaries. The generated
   elements(n) manual page now groups the elements by function. Also
   updated and documented the format for doc comments (see
   `doc/elementdoc.7').

** Added low-level RPC capability. LLRPCs are low-level handlers designed
   for speed rather than ease of use or human-readable results. In the
   Linux kernel module, LLRPCs are called in response to ioctl(2) commands
   on handler files. (The user-level program doesn't support LLRPCs yet.)
   Unlike handlers, LLRPCs can both take arguments and return results.
   IPRateMonitor(n), for example, uses LLRPCs to report rate information.

* User-level driver

** User-level Click will no longer stop by default when an InfiniteSource
   (or RatedSource or FromDump) runs out of packets to send. Supply the
   `-s' option to get the old behavior.

** You can give shell globbing syntax to the user-level driver's `-h
   HANDLER' option; for example, `-h "*.config"'.
 
** Fixed FromBPF and ToBPF, finally. The fixed versions are called
   FromDevice and ToDevice.

** Added ControlSocket element so you can call handlers from other
   programs.

* Kernel driver

** Added patch for Linux kernel 2.2.16. This patch contains the latest
   changes to Linux. While Click will continue to work under 2.2.14 for the
   time being, it may not work in the future. If you have a previous
   version of Click, you must unapply the old kernel patch and apply the
   new kernel patch before compiling.

** Improved /proc handling. It is now safe to keep open file descriptors to
   handler files even while uninstalling the kernel module or installing a
   new configuration. These files will become unusable after the
   (un)installation -- every operation will return EINVAL -- but the kernel
   will not crash and the Click module's reference count will not get
   screwed up.

** Cleaned up polling interface in Linux.

* Elements

** Added QuitWatcher, FrontDropQueue, StripIPHeader, IPClassifier, IPPrint,
   FTPPortMapper, IPRewriterPatterns, Switch, PullSwitch, RoundRobinSwitch,
   and StrideSwitch, among others. Also mentioned above: user-level
   FromDevice, ToDevice, and ControlSocket; kernel module ToLinuxSniffers;
   generic SetIPAddress, StoreIPAddress.

** Added AddressInfo element, which supports network address mnemonics. For
   example, you can now say `AddressInfo(butt 18.26.4.44); IPEncap(6, butt,
   18.26.4.15);'; `butt' in IPEncap's configuration string then means
   `18.26.4.44'.

** Added experimental IPv6 elements; `./configure --enable-ip6' to compile
   them.

** Fixed kernel alignment bug in IP header checking elements: can't use
   Linux's `fast_ip_csum' on unaligned data.

** Fixed user-level FromDevice and ToDevice bugs. Now FromDevice will not
   starve other router processing, and ToDevice works on Linux.

** Fixed FromLinux bug: now supports multiple instances of FromLinux for same
   device (this happens while installing a new configuration: initialize is
   called on the new FromLinux before the last FromLinux instance is
   uninitialized).

** Fixed ToLinux: now calls ptype_dispatch inside start_bh_atomic() and
   end_bh_atomic().

** Modified kernel ToDevice: ToDevice now sends Linux's packets when the
   device is idle. This prevents Click from starving out packets sent by
   other processes or Linux.

** Improved Classifier optimizations.

** Radio elements are not compiled by default.

** Added new `elements/local' directory for your own elements. They are not
   compiled by default.

* Tools

** Fixed click-uncombine(1) bugs and changed its order of arguments.

** Added PollDevice and EtherEncap specifications to click-align(1).

** click-fastclassifier(1) works on IPClassifier.

** Added `--verbose' option to click-install(1).


Version 1.0.6   6.May.2000

* Kernel driver

** Fixed kernel Packet::expensive_push. Patch by Richard Mortier
   <rmm1002@cam.ac.uk>.

** Added /proc/click/version.

* Elements

** Replace UDPEncap with UDPIPEncap. New element adds both IP and UDP
   headers, and fixes several bugs in UDPEncap. Thanks to Richard Mortier
   <Richard.Mortier@cl.cam.ac.uk>.

* Miscellaneous

** Fixed findelements.sh: Ethernet switch elements were not being included.


Version 1.0.5   1.May.2000

* Kernel and user-level drivers

** You can hot-swap install Click configurations in the Linux kernel
   module. In a hot-swap install, packets stored in the old configuration
   will not be lost. (The new configuration's Queues must have the same
   names as the old configuration's Queues.) See the click.o(8) man page
   (under /proc/click/hotconfig) and the click-install(1) man page for more
   information.

** Bug fixes: User-level Click correctly handles timed elements like
   TimedSource and TimedSink and scheduled elements like RatedSource; and
   the kernel module correctly handles timed elements. Reported by Saurabh
   Sandhir <sandhir@purdue.edu>.

** More changes to ToDevice to enable Linux and Click to send packets
   independently and not cause race conditions. This includes a new linux
   kernel patch (etc/linux-2.2.14-patch) and changes to ToDevice. Click
   runs in a separate kernel thread, so we synchronize ToDevice send
   operations in kernel with a bit lock (dev->tbusy).

** Every Linux kernel module now runs as a separate kernel thread, even if
   HAVE_POLLING is not defined.

** The click user-level driver can now automatically compile any required
   package sources. (Click-install has been able to do this for a while.)

** Every router has its own list of Timers, so Timer has no global state.
   Originally requested by Leigh Stoller <stoller@fast.cs.utah.edu>. This
   changed the Timer abstraction; you now need to call Timer::attach() on a
   Timer before using it. See timedsource.cc for an example.

** Fixed bugs and memory leaks.

* Tools

** click-xform: Bug fixes and performance improvements. Also, click-xform
   tries to preserve element names from the original configuration. If a
   pattern element and a replacement element share a name, then when the
   pattern is applied, the replacing element will use the name of the
   original element that corresponded to the pattern element. (Phew!)

** click-devirtualize: Bug fixes. It also uses standards-compliant C++.

** click-fastclassifier can combine adjacent Classifiers.

** Added click-combine and click-uncombine.

* Elements

** Removed UnlimitedElement in favor of `notify_n{in,out}puts()'.

** Removed TimedElement.

** Removed Broadcast in favor of Tee.

** Added select_fd() and selected() to ToBPF.

** Various other fixes.

* Configurations

** Added conf/make-udpgen.pl, a Perl script that generates a udpgen-like
   Click configuration.

** Added conf/make-udpcount.pl, a Perl script that generates a
   udpcount-like Click configuration.


Version 1.0.4   13.Apr.2000 (not released)

* Changed how FromDevice, ToDevice, and PollDevice interact with each
  other. Before, if you specify just PollDevice w/o ToDevice, the tx queue
  does not get cleaned because in polling mode tx queue cleaning must be
  scheduled explicitly. Now, PollDevice looks for a ToDevice on the same
  device. If no such element exists, it remembers to clean the tx queue
  itself. Also ToDevice looks for a PollDevice to decide if it should use
  polling extensions. Some of this code was in the 1.0.3 release, but there
  was a bug.

* New linux kernel patch (etc/linux-2.2.14-patch): locks are added to protect
  recycling of sk_buff objects and device polling functions - not extensively
  tested.

* New elements: UDPEncap (put an UDP header on a packet), RatedSource (like
  infinite source, but send packets at a given rate).

* udpgen click configuration (conf/udpgen.click): This is better than
  udpgen.o in that you can utilize device driver polling extensions. Also,
  on some machines we observe a delay (on order of ms) between when
  transmission complete and tx interrupt. This causes the transmission
  queue to not get cleaned fast enough for udpgen to send its packets.
  Using Click, we can control when the tx queue is cleaned.


Version 1.0.3   9.Apr.2000

* Added `--with-linux[=DIR]' option to `./configure'. Suggested by Richard
  Mortier <Richard.Mortier@cl.cam.ac.uk>.

* Removed `default_processing()' method of Element and replaced it with
  `processing()'. Where you once wrote `Processing default_processing()
  const { return PUSH; }', now write `const char *processing() const {
  return PUSH; }'. The new way is more flexible and lets us abstract the
  element's processing code. See Element(3) for details.

* Added `click-check' tool, a static checker for Click configurations.
  Currently it only checks push and pull processing for correctness.

* Added `--reverse' option to click-xform. Suggested by Mike Burrows
  (Compaq SRC).

* Added `--reverse' options to click-fastclassifier and click-devirtualize.

* Renamed click-specialize tool to click-devirtualize. It's clearer. Also
  fixed several bugs.

* Click-devirtualize now determines automatically whether two specialized
  elements can share code. As a result, the `--like' option has been
  removed.

* Fixed bugs: RFC2507Decomp didn't compile. Rewriter updates. Several bugs
  caught by recent GCCs; patches supplied by Richard Mortier
  <Richard.Mortier@cl.cam.ac.uk>.


Version 1.0.2   20.Mar.2000

* Fixed reentrancy bug: in this release, when running in polling mode in
  kernel, timers are maintained by click, in the same fashion userlevel timers
  are maintained. Previously, we use linux timers, and so callbacks may get
  called by linux when click is running, creating possible race conditions.
  Note: in polling mode, if the click thread yields to other processes, timers
  will not get called until the click thread runs again.

* Added Rewriter, MappingCreator, and IPMirror elements for rewriting
  TCP/IP and UDP/IP streams.

* Added MarkIPHeader, CheckTCPHeader, and CheckUDPHeader elements.

* Fixed FromDump and ToDump.

* Added optional queue names to RED.

* Removed `is_a()' and `is_a_cast()' methods of Element. The new way,
  `cast()', allows arbitrary interfaces.

* Use Linux's fast checksum routines in CheckIPHeader and IPInputCombo.

* Fixed bug in userlevel Click: elements weren't being scheduled, so
  nothing seemed to happen.


Version 1.0.1   28.Feb.2000

* Fixed Makefile bugs; Linux module installs properly now. Problem reported
  by Joe Elliott <joe@inetd.com>.


Version 1.0   25.Feb.2000

* Added polling support. Result: 4-5 times better peak performance. The
  optimization tools can get it up to 6 times better (435,000 64-byte
  packets per second).

* Replaced work list with stride scheduler.

* In the Linux kernel, Click now runs in a kernel thread.

* Removed packet-upstream events and the associated processing in Queue,
  Shaper, and so forth. The stride scheduler solves the same problem more
  elegantly.

* Added `click-specialize' tool.

* Added `click-uninstall' tool.

* Added dynamic IP routing table element (LookupIPRoute2).

* Added stride scheduling packet scheduler element (StrideSched).

* Added PeekHandlers and PokeHandlers elements so you can test read and
  write handlers at user level.

* Fixed lexer bug: compound elements with `{' are accepted everywhere.

* Added arguments to compound elements.

* Rearranged directory structure. (Include files placed in
  PREFIX/include/click, not directly in PREFIX/include.)

* Improved several elements, including ARPQuerier.

* Changed interface for registering handlers. See
  `elements/standard/red.cc' or the Element(3) manual page for examples.

* Many other changes, bug fixes and improvements.


Version 0.6   11.Dec.1999

* Added dynamic linking support. Click configuration files can now be ar(1)
  archives, possibly containing "packages"---dynamically linked object
  files that are loaded into the kernel module or the user-level program.
  This means you can make your own element classes and link them
  dynamically.

* Added `click-fastclassifier' and `click-install' tools.

* Added `--help', `--version', etc. options to tools.

* Added man pages for `click', `click-align', and `click-install'.

* More options for user-level Click, including support for hander
  invocations on the command line.

* Added `udpgen' and `udpcount' in the `tools' directory.

* Fixed dynamic reconfiguration bug: no more doubled characters.

* Fixed compound element bug: input and output ports bigger than 0 were
  ignored.


Version 0.51   12.Nov.1999

* Support for required-alignment machines via `click-align' tool. Added
  click-align tool, Align and AlignmentInfo elements.

* More documentation.


Version 0.5   20.Oct.1999

* First public release.
