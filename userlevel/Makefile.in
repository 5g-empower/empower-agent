## Click userlevel driver Makefile ##
SHELL = @SHELL@

srcdir := @srcdir@
top_srcdir := @top_srcdir@
top_builddir := ..
subdir := userlevel

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
sbindir = @sbindir@
libdir = @libdir@

VPATH = .:$(top_srcdir)/lib:$(top_srcdir)/$(subdir):$(top_srcdir)/elements/userlevel@elements_vpath@

CC = @CC@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
AR = @AR@
RANLIB = @RANLIB@
INSTALL = @INSTALL@
mkinstalldirs = @top_srcdir@/mkinstalldirs

.SUFFIXES:
.SUFFIXES: .S .c .cc .o .s .ii

.c.o:
	$(COMPILE) -c $<
.s.o:
	$(COMPILE) -c $<
.S.o:
	$(COMPILE) -c $<
.cc.o:
	$(CXXCOMPILE) -c $<
.cc.ii:
	$(CXXCOMPILE) -E $< > $@


ifndef INSTALLPROGS
INSTALLPROGS = click
endif

GENERIC_OBJS = string.o straccum.o \
	bitvector.o vectorv.o templatei.o bighashmap_arena.o \
	ipaddress.o ip6address.o ipaddressset.o ip6flowid.o ipflowid.o etheraddress.o \
	packet.o \
	error.o glue.o task.o timer.o atomic.o gaprate.o \
	element.o \
	confparse.o variableenv.o lexer.o archive.o elemfilter.o \
	routerthread.o router.o \
	crc32.o in_cksum.o iptable.o iptable2.o ip6table.o radix.o \
	userutils.o

-include elements.mk

LIBOBJS = $(GENERIC_OBJS) \
	addressinfo.o alignmentinfo.o errorelement.o scheduleinfo.o \
	drivermanager.o clp.o
OBJS = $(ELEMENT_OBJS) elements.o click.o

CPPFLAGS = @CPPFLAGS@ -MD -DCLICK_USERLEVEL
CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@

DEFS = @DEFS@
INCLUDES = -I$(top_builddir)/include -I$(top_srcdir)/include \
	-I$(srcdir) -I$(top_srcdir) @PCAP_HEADER_PATH@
LDFLAGS = @LDFLAGS@ @PCAP_LIBRARY_PATH@
LIBS = @LIBS@ @PCAP_LIBRARY@ @DL_LIBRARY@ @SOCKET_LIBS@

CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@

all: $(INSTALLPROGS)

click: Makefile libclick.a $(OBJS)
	$(CXXLINK) -rdynamic $(OBJS) $(LIBS) libclick.a

libclick.a: Makefile $(LIBOBJS)
	$(AR) cru libclick.a $(LIBOBJS)
	$(RANLIB) libclick.a

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

elemlist:
	@/bin/rm -f elements.conf
	@$(MAKE) elements.conf
elements.conf: $(top_builddir)/config.status $(top_srcdir)/click-buildtool
	echo "userlevel @element_groups@" | ./click-buildtool findelem -p $(top_srcdir) -r "@provisions@" > elements.conf
elements.mk: elements.conf $(top_srcdir)/click-buildtool
	(cd $(top_srcdir); ./click-buildtool elem2make -x addressinfo.o -x alignmentinfo.o -x errorelement.o -x scheduleinfo.o -x drivermanager.o) < elements.conf > elements.mk
elements.cc: elements.conf $(top_srcdir)/click-buildtool
	(cd $(top_srcdir); ./click-buildtool elem2export) < elements.conf > elements.cc
	@rm -f elements.d

DEPFILES := $(wildcard *.d)
ifneq ($(DEPFILES),)
include $(DEPFILES)
endif

install: $(INSTALLPROGS) libclick.a
	$(mkinstalldirs) $(bindir)
	for i in $(INSTALLPROGS); do $(INSTALL) $$i $(bindir)/$$i; done
	$(mkinstalldirs) $(libdir)
	$(INSTALL) libclick.a $(libdir)/libclick.a
install-man:

clean:
	rm -f *.d *.o $(INSTALLPROGS) elements.mk elements.cc elements.conf libclick.a
distclean: clean
	-rm -f Makefile

.PHONY: all clean distclean elemlist install install-man
