// for click.lcs.mit.edu

require(ron);

iprw :: IPRewriter(pattern - - - - 0 1, 
		   pattern - - - - 2 3);

rt :: LookupIPRouteRON(2);
neighborclass :: IPClassifier(src 18.26.4.104, -);
toktap :: EtherEncap(0x0800, 1:1:1:1:1:1, 2:2:2:2:2:2)
	-> KernelTap(1.0.0.1/255.255.255.0)
	-> Discard;
setgw :: SetIPAddress(18.26.4.1);
arpq :: ARPQuerier(18.26.4.104, 00:A0:C9:9C:63:40)
from0 :: FromDevice(eth0)

from0	-> c :: Classifier(12/0806 20/0002, -)
	-> [1]arpq;
c[1] -> Discard;

// ------------- Divert Sockets ---------------
// Outgoing TCP Packets 
DivertSocket(eth0, 3000, 2, 6, 18.26.4.89, 0.0.0.0/0, out)
	-> Print(OUT_TCP)

	-> MarkIPHeader
	-> SetIPChecksum
	-> SetIPChecksum

	-> CheckIPHeader
	-> GetIPAddress(16)
	-> [0]iprw;

// Incoming TCP Packets
DivertSocket(eth0, 3001, 2, 6, 0.0.0.0/0, 18.26.4.89, in)
	-> CheckIPHeader
	-> Print(IN__TCP)
	-> GetIPAddress(16)
	-> [1]iprw;

// Incoming IP-IP Packets
DivertSocket(eth0, 3002, 2, 4, 0.0.0.0/0, 18.26.4.89, in)
	-> CheckIPHeader
	-> Print(IN-ENCAP-RAW)
	-> GetIPAddress(16)
	-> neighborclass;
// ------------- Divert Sockets ---------------

neighborclass[0]
	-> IPDecapPaint
	-> CheckIPHeader
	-> IPPrint(IN-ENCAP-STR)
	-> IPReassembler
	-> CheckIPHeader
	-> GetIPAddress(16)
	-> [2]rt;

neighborclass[1] 
	-> toktap;

iprw[0] -> [0]rt;
iprw[1] -> [1]rt;
iprw[2] -> setgw;
iprw[3] -> toktap;

rt[0] 	-> toktap;
rt[1] 	-> setgw;
rt[2] 	-> IPFragmenter(1400)
	-> IPEncap(4, 18.26.4.89, 18.26.0.104)
	-> setgw;

setgw 	-> arpq
	-> Queue(100)
	-> ToDevice(eth0);









