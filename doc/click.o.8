.\" -*- mode: nroff -*-
.ds V 1.0.5
.ds D 27/Apr/2000
.ds E " \-\- 
.if t .ds E \(em
.de Sp
.if n .sp
.if t .sp 0.4
..
.de Es
.Sp
.RS 5
.nf
..
.de Ee
.fi
.RE
.PP
..
.de Rs
.RS
.Sp
..
.de Re
.Sp
.RE
..
.de M
.BR "\\$1" "(\\$2)\\$3"
..
.de RM
.RB "\\$1" "\\$2" "(\\$3)\\$4"
..
.TH CLICK.O 8 "\*D" "Version \*V"
.SH NAME
click.o \- Click kernel module for Linux
'
.SH DESCRIPTION
'
The Click modular router can be compiled as a Linux kernel module, called
.BR click.o .
It can steal packets from network devices before Linux gets a chance to
handle them, send packets directly to devices, and send packets to Linux
for normal processing.
.PP
Install the kernel module with
.M insmod 1 :
`/sbin/insmod click.o'. Remove it with
.M rmmod 1 :
`/sbin/rmmod click'. The
.M click-install 1
program will also install the kernel module if necessary.
.PP
The module uses the /proc filesystem
.RM ( proc 5 )
for its API. It creates a number of files under /proc/click, some read-only
and some read/write (writable by the superuser). You control the module by
writing to these files.
.PP
Install a router configuration by writing it to /proc/click/config or
/proc/click/hotconfig. The configuration can use most of Click's element
classes (see
.M elements n ).
Several element classes control how the module receives and transmits
packets:
.M FromDevice n
and
.M PollDevice n
steal packets from devices before Linux processes them,
.M ToDevice n
sends packets directly to devices, and
.M ToLinux n
sends packets to Linux for normal processing. Removing the module or
installing a null configuration will restore your machine's default
networking behavior.
.PP
The files under /proc/click include:
.TP 5
.B /proc/click/config
Read/write. Contains a Click-language description (see
.M click 5 )
of the most recent router configuration, not including any run-time
reconfiguration. Write a Click-language router description to this file to
install a new router configuration.
'
.TP
.B /proc/click/hotconfig
Write-only. Write a Click-language router description to this file to
hot-swap install a new router configuration. The new router is installed
only if it initializes correctly; otherwise, error messages will be
reported to /proc/click/errors, but the old router will keep working
without interruption. If the new router initializes successfully, state
from the old router, such as any packets stored in
.M Queue n
elements, will be moved into the new router before it is installed. This
happens on a per-element basis, and it only works if the new element and
the old element have the same name. This behavior differs from
/proc/click/config, which always throws away the old router.
'
.TP
.B /proc/click/errors
Read-only. All errors and messages reported by the Click router since the
last reconfiguration (that is, the last write to /proc/click/config). These
messages are also printed to the system log.
'
.TP
.B /proc/click/classes
Read-only. The primitive element classes supported by the router, listed
one per line.
'
.TP
.B /proc/click/list
Read-only. The elements in the current router configuration, listed one per
line by name. The first line is an integer: the number of elements.
'
.TP
.B /proc/click/flatconfig
Read-only. A Click-language description of the current router
configuration, including the effects of any run-time reconfiguration. All
element declarations come first, then all connections. Compound elements
are expanded into their primitive components.
'
.TP
.B /proc/click/packages
Read-only. The packages that are currently linked to the Click module,
listed one per line.
'
.TP
.B /proc/click/requirements
Read-only. The packages required by the current configuration, listed one
per line.
'
.TP
.B /proc/click/cycles, /proc/click/meminfo
Read-only. Cycle count and memory usage statistics.
'
.TP
.B /proc/click/version
Read-only. The kernel module's version number.
'
.SS "Element directories"
'
Every element in the current router configuration has a directory under
/proc/click. You can access the directory by number or element name. The
.IR i th
element in /proc/click/list has directory
.RI `/proc/click/ i ',
and if the element is named
.IR n ,
that directory can be accessed as
.RI `/proc/click/ n '.
This works even if the name contains slashes 
.RB ( click.o
creates directories for each name component).
.PP
The files in these directories are called
.IR handlers .
They include:
'
.TP 5
.BI /proc/click/xxx/class
Read-only. The element class.
.TP
.BI /proc/click/xxx/name
Read-only. The element's name.
.TP
.BI /proc/click/xxx/config
Read/write if the element supports run-time reconfiguration; otherwise
read-only. The element's current configuration. Writing to this file (if it
is writable) causes the element to reconfigure itself on the fly. If the
reconfiguration fails, the element's old configuration is used instead.
.TP
.BI /proc/click/xxx/inputs
Read-only. Describes the element's inputs: how many there are, and (for
pull inputs) what they are connected to.
.TP
.BI /proc/click/xxx/outputs
Read-only. Describes the element's outputs: how many there are, and (for
push outputs) what they are connected to.
'
.PP
Particular elements may add additional handlers to their directories. For
example, RED elements (see
.M RED n )
add read/write
.BR min_thresh ", " max_thresh ", and " max_p
files representing RED parameters, and Counter elements (see
.M Counter n )
provide read-only
.BR count " and " rate
files to report packet counts and the recent rate.
.PP
The subdirectories and generic files are always created, but
element-specific files are created only if the router configuration was
initialized successfully.
'
.SH "BUGS"
If you get an unaligned access error, try running your configuration
through
.M click-align 1
before installing it.
'
.SH "SEE ALSO"
.M click 1 ,
.M click-align 1 ,
.M click-install 1 ,
.M insmod 1 ,
.M rmmod 1 ,
.M click 5 ,
.M elements n ,
.M FromDevice n ,
.M PollDevice n ,
.M ToDevice n ,
.M FromLinux n ,
.M ToLinux n ,
.M Queue n
'
.SH AUTHOR
.na
Eddie Kohler, eddietwo@lcs.mit.edu
.br
Robert Morris, rtm@lcs.mit.edu
.br
http://www.pdos.lcs.mit.edu/click/
'
