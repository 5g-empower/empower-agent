SHELL = @SHELL@

srcdir := @srcdir@
top_srcdir := @top_srcdir@
top_builddir := ..
subdir := linuxmodule

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
sbindir = @sbindir@
libdir = @libdir@
linuxdir = @linuxdir@

VPATH = .:$(top_srcdir)/lib:$(top_srcdir)/$(subdir):$(top_srcdir)/elements/linuxmodule@elements_vpath@

CC = @CC@
CPP = @CPP@
CXX = @KERNEL_CXX@
CXXCPP = @CXXCPP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL@ -m 644
mkinstalldirs = @top_srcdir@/mkinstalldirs

.SUFFIXES:
.SUFFIXES: .S .c .cc .o .s .ii

.c.o:
	$(COMPILE) -c $<
.s.o:
	$(COMPILE) -c $<
.S.o:
	$(COMPILE) -c $<
.cc.o:
	$(CXXCOMPILE) -c $<
.cc.s:
	$(CXXCOMPILE) -S $<
.cc.ii:
	$(CXXCOMPILE) -E $< > $@


GENERIC_OBJS = string.o straccum.o \
	bitvector.o vectorv.o templatei.o bighashmap_arena.o \
	ipaddress.o ip6address.o ipaddressset.o ipflowid.o etheraddress.o \
	packet.o \
	error.o glue.o timer.o gaprate.o \
	elemlink.o element.o \
	confparse.o lexer.o elemfilter.o router.o \
	crc32.o iptable.o iptable2.o ip6table.o radix.o

LINUXMODULE_OBJS = kernelerror.o kernelversion.o module.o sched.o \
	proc_config.o proc_element.o proc_mgr.o read-pmc.o

-include elements.mk

OBJS = $(GENERIC_OBJS) $(ELEMENT_OBJS) $(LINUXMODULE_OBJS) elements.o

CPPFLAGS = @CPPFLAGS@ -MD -DCLICK_LINUXMODULE
CFLAGS = @CFLAGS_NDEBUG@
CXXFLAGS = @CXXFLAGS_NDEBUG@

DEFS = @DEFS@ 
INCLUDES = -I$(top_builddir) -I$(top_builddir)/include -I$(srcdir) \
	-I$(top_srcdir) -I$(top_srcdir)/include -I$(linuxdir)/include
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@

CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@

all: click.o

click.o: Makefile $(OBJS)
	ld -r -o click.o $(OBJS)
	strip -g click.o

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

elemlist:
	@/bin/rm -f elements.conf
	@$(MAKE) elements.conf
elements.conf: $(top_builddir)/config.status
	echo "linuxmodule@element_groups@" | (cd $(top_srcdir); ./click-buildtool findelem) > elements.conf
elements.mk: elements.conf $(top_srcdir)/click-buildtool
	(cd $(top_srcdir); ./click-buildtool elem2make) < elements.conf > elements.mk
elements.cc: elements.conf $(top_srcdir)/click-buildtool
	(cd $(top_srcdir); ./click-buildtool elem2export) < elements.conf > elements.cc
	@rm -f elements.d

DEPFILES := $(wildcard *.d)
ifneq ($(DEPFILES),)
include $(DEPFILES)
endif

install: click.o
	$(mkinstalldirs) $(libdir)
	$(INSTALL_DATA) click.o $(libdir)/click.o
install-man:

clean:
	-rm -f *.d *.o elements.mk elements.cc elements.conf
distclean: clean
	-rm -f Makefile

.PHONY: all clean distclean elemlist install install-man
